     #g ,9troduc;n to ,cryptography

  ,cryptography is ! /udy ( s5d+ & rcvg
secret messages4 ,! aim ( cryptography
is to s5d messages acr a *annel s t only
! 9t5d$ recipi5t ( ! message c r1d x4 ,9
addi;n1 :5 a message is rcvd1 ! recipi5t
usually requires "s assur.e t ! message
is au!ntic2 t is1 t x has n be5 s5t by
"s"o :o is try+ to dcv ! recipi5t4
,mod}n cryptography is h1vily dep5d5t on
ab/ract algebra & numb} !ory4
  ,! message to 2 s5t is call$ !
~1pla9text message4 ,! 4guis$ message is
call$ ! ~1ciph}text4 ,! pla9text & !
ciph}text >e bo? writt5 9 an ~1alphabet1
3si/+ ( ~1lrs or ~1"*s4 ,"*s c 9clude n
only ! famili> alphabetic "*s ,a1
_% ''' _:1 ;,z & a1 _% ''' _:1 ;z b al
digits1 punctua;n m>ks1 & blanks4 ,a
~1cryptosy/em1 or ~1ciph}1 has two "ps3
~15cryp;n1 ! process ( trans=m+ a
pla9text message to a ciph}text message1
& ~1decryp;n1 ! rev}se trans=ma;n (
*ang+ a ciph}text message 9to a     #dgf
pla9text message4
  ,"! >e _m di6}5t families (
cryptosy/ems1 ea* 4t+ui%$ by a "picul>
5cryp;n algori?m4 ,cryptosy/ems 9 a
specifi$ cryptographic family >e 4t+ui%$
f "o ano!r by a p>amet} to ! 5cryp;n
func;n call$ a ~1key4 ,a classical
cryptosy/em has a s+le key1 : m/ 2 kept
secret1 "kn only to ! s5d} & ! rcvr ( !
message4 ,if p}son ,a wi%es to s5d
secret messages to two di6}5t p ;,b &
;,c1 & does n wi% to h ;,b "u/& ;,c's
messages or vice v}sa1 ,a m/ use two
sep>ate keys1 s "o cryptosy/em is us$ =
ex*ang+ messages ) ;,b1 & ano!r is us$ =
ex*ang+ messages ) ;,c4
  ,sy/ems t use two sep>ate keys1 "o =
5cod+ & ano!r = decod+1 >e call$
~7public key cryptosy/ems~'4 ,s9ce k ( !
5cod+ key does n all{ any"o to guess at
! decod+ key1 ! 5cod+ key c 2 made
public4 ,a public key cryptosy/em all{s
,a & ;,b to s5d messages to ;,c us+ !
same 5cod+ key4 ,any"o is capable (
5cod+ a message to 2 s5t to ;,c1    #dgg
b only ;,c "ks h{ to decode s* a
message4

    #g4a ,private ,key ,cryptography
  ,9 ~1s+le or ~7private key
cryptosy/ems~' ! same key is us$ = bo?
5crypt+ & decrypt+ messages4 ,to 5crypt
a pla9text message1 we apply to !
message "s func;n : is kept secret1 say
;f4 ,? func;n w yield an 5crypt$
message4 ,giv5 ! 5crypt$ =m ( ! message1
we c recov} ! orig9al message by apply+
! 9v}se trans=ma;n _% f~-1 _:4 ,!
trans=ma;n ;f m/ 2 relatively easy to
compute1 z m/ _% f~-1 _:2 h{"e1 ;f m/ 2
extremely di6icult to guess f available
examples ( cod$ messages4

7777777777777777777777777777777777777777
,example #g4a
  ,"o ( ! f/ & mo/ fam|s private key
cryptosy/ems 0 ! %ift code us$ by
,julius ,caes>4 ,we f/ digitize !
alphabet by lett+ _% ,a .k #00, ,b .k
#01, ''', ,z .k #25 _:4 ,! 5cod+    #dgh
func;n w 2
_%

f(p) .k p+3m"o"d #26_2

_:
t is1 _% ,a $|33o ,d, ,b $|33o ,e, ''',
,z $|33o ,c _:4 ,! decod+ func;n is !n
_%

f~-1"(p) .k p-3m"o"d #26 .k p+23m"o"d
#26

_:4
,suppose we rcv ! 5cod$ message
,,dojheud4 ,to decode ? message1 we f/
digitize x3
_%

#3, #14, #9, #7, #4, #20, #3

_:4
,next we apply ! 9v}se trans=ma;n to get

                                    #dgi
_%

#0, #11, #6, #4, #1, #17, #0

_:1
or ,,algebra4 ,notice "h t "! is no?+
special ab ei ( ! numb}s #c or #bf4 ,we
cd h us$ a l>g} alphabet or a di6}5t
%ift4
gggggggggggggggggggggggggggggggggggggggg

  ~1,cryptanalysis is 3c}n$ ) deciph}+ a
rcvd or 9t}cept$ message4 ,me?ods f
probabil;y & /ati/ics >e grt aids 9
deciph}+ an 9t}cept$ message2 = example1
! frequ5cy analysis ( ! "*s appe>+ 9 !
9t}cept$ message (t5 makes xs decryp;n
possible4

7777777777777777777777777777777777777777
,example #g4b
  ,suppose we rcv a message t we "k 0
5crypt$ by us+ a %ift trans=ma;n on s+le
lrs ( ! #bf-lr alphabet4 ,to f9d |
exactly :at ! %ift trans=ma;n       #dhj
was1 we m/ compute ;b 9 ! equa;n _% f(p)
.k p+bm"o"d #26 _:4 ,we c d ? us+
frequ5cy analysis4 ,! lr _% ,e .k #04 _:
is ! mo/ commonly o3urr+ lr 9 ! ,5gli%
language4 ,suppose t _% ,s .k #18 _: is
! mo/ commonly o3urr+ lr 9 ! ciph}text4
,!n we h gd r1son to suspect t  _% #18
.k #4+bm"o"d #26 _:1 or _% b .k #14 _:4
,"!=e1 ! mo/ likely 5crypt+ func;n is
_%

f(p) .k p+14m"o"d #26

_:4
,! correspond+ decrypt+ func;n is
_%

f~-1"(p) .k p+12m"o"d #26

_:4
,x is n{ easy to det}m9e :e!r or n |r
guess is correct4
gggggggggggggggggggggggggggggggggggggggg

  ,simple %ift codes >e examples    #dha
( ~1monoalphabetic ~1cryptosy/ems4 ,9 ~!
ciph}s a "* 9 ! 5ciph}$ message
repres5ts exactly "o "* 9 ! orig9al
message4 ,s* cryptosy/ems >e n v
sophi/icat$ & >e q easy to br1k4 ,9
fact1 9 a simple %ift z describ$ 9
,example #g4a1 "! >e only #bf possible
keys4 ,x wd 2 q easy to try !m all r ?an
to use frequ5cy analysis4
  ,let u 9ve/igate a sli<tly m
sophi/icat$ cryptosy/em4 ,suppose t !
5cod+ func;n is giv5 by
_%

f(p) .k ap+bm"o"d #26

_:4
,we f/ ne$ to f9d | :5 a decod+ func;n
_% f~-1 _: exi/s4 ,s* a decod+ func;n
exi/s :5 we c solve ! equa;n
_%

c .k ap+bm"o"d #26

_:                                  #dhb
= ;p4 ,by ,proposi;n #c4d1 ? is possible
exactly :5 a has an 9v}se or1
equival5tly1 :5 _% gcd (a, 26) .k #1 _:4
,9 ? case
_%

f~-1"(p) .k a~-1"p-a~-1"bm"o"d #26

_:4
,s* a cryptosy/em is call$ an ~1a69e
~1cryptosy/em4













                                    #dhc
7777777777777777777777777777777777777777
,example #g4c
  ,let u 3sid} ! a69e cryptosy/em
_% f(p) .k ap+bm"o"d #26 _:4 ,= ?
cryptosy/em to "w we m/ *oose an _% a `e
`;,z26 _: t is 9v}tible4 ,? is only
possible if _% gcd (a, 26) .k #1 _:4
,recogniz+ ? fact1 we w let _% a .k
#5 _: s9ce _% gcd (5, 26) .k #1 _:4 ,x
is easy to see t _% a~-1 .k #21 _:4
,"!=e1 we c take |r 5cryp;n func;n to 2
_% f(p) .k #5p+3m"o"d #26 _:4 ,?us1
,,algebra is 5cod$ z _% #3, #6, #7, #23,
#8, #10, #3 _:1 or ,,d<xikd4 ,! decryp;n
func;n w 2
_%

f~-1"(p) .k #21p-21*3m"o"d #26 .k
#21p+15m"o"d #26

_:4
gggggggggggggggggggggggggggggggggggggggg

  ,a cryptosy/em wd 2 m secure if a
ciph}text lr cd repres5t m ?an "o   #dhd
pla9text lr4 ,to give an example ( ?
type ( cryptosy/em1 call$ a
~1polyalphabetic ~1cryptosy/em1 we w
g5}alize a69e codes by us+ matrices4 ,!
idea "ws r|<ly ! same z 2f2 h{"e1 9/1d (
5crypt+ "o lr at a "t we w 5crypt pairs
( lrs4 ,we c /ore a pair ( lrs _% p1 _:
& _% p2 _: 9 a vector
_%

_;p .k (p1%p2)

_:4
,let ,a 2 a _% #2`*2 _: 9v}tible matrix
) 5tries 9 _% `;,z26 _:4 ,we c def9e an
5cod+ func;n by
_%

f(_;p) .k ,a_;p+_;b

_:1
": _% _;b _: is a fix$ column vector &
matrix op}a;ns >e p}=m$ 9 _% `;,z26 _:4
,! decod+ func;n m/ 2
                                    #dhe
_%

f~-1"(_;p) .k ,a~-1"_;p-,a~-1"_;b

_:4



















                                    #dhf
7777777777777777777777777777777777777777
,example #g4d
  ,suppose t we wi% to 5code ! ~w
,,help4 ,! correspond+ digit /r+ is
_% #7, #4, #11, #15 _:4 ,if
_%

,a .k ,(#3 #5,)
      ,(#1 #2,)

_:1
!n
_%

,a~-1 .k ,(#2  #21,)
         ,(#25 #3 ,)

_:4
,if _% _;b .k (2, 2)~t _:1 !n |r message
is 5crypt$ z ,,rrgr4 ,! 5crypt$ lr ;,r
repres5ts m ?an "o pla9text lr4
gggggggggggggggggggggggggggggggggggggggg

  ,frequ5cy analysis c / 2 p}=m$ on a
polyalphabetic cryptosy/em1 2c we   #dhg
h a gd "u/&+ ( h{ pairs ( lrs appe> 9 !
,5gli% language4 ,! pair .1th appe>s q
(t52 ! pair .1qz n"e appe>s4 ,to avoid
decryp;n by a ?ird "py1 we m/ use a l>g}
matrix ?an ! "o we us$ 9 ,example #g4d4

    #g4b ,public ,key ,cryptography
  ,if tradi;nal cryptosy/ems >e us$1
any"o :o "ks 5 to 5code a message w al
"k 5 to decode an 9t}cept$ message4 ,9
#aigf1 ;,w4 ,di6ie & ;,m4 ,hellman
propos$ public key cryptography1 : is
bas$ on ! obs}va;n t ! 5cryp;n &
decryp;n proc$ures ne$ n h ! same key4
,? removes ! require;t t ! 5cod+ key 2
kept secret4 ,! 5cod+ func;n ;f m/ 2
relatively easy to compute1 b _% f~-1 _:
m/ 2 extremely di6icult to compute )|t
"s addi;nal 9=ma;n1 s t "s"o :o "ks only
! 5crypt+ key _c f9d ! decrypt+ key )|t
prohibitive computa;n4 ,x is 9t}e/+ to
note t to date1 no sy/em has be5 propos$
t has be5 prov5 to 2 8"o-way20 t is1 =
any exi/+ public key cryptosy/em1 x has
n"e be5 %{n to 2 computa;nally      #dhh
prohibitive to decode messages ) only k
( ! 5cod+ key4

      ,! ,,rsa ,cryptosy/em
  ,! ,,rsa cryptosy/em 9troduc$ by ;,r4
,rive/1 ,a4 ,%amir1 & ;,l4 ,adleman 9
#aigh1 is bas$ on ! di6iculty ( factor+
l>ge numb}s4 ,?|< x is n a di6icult task
to f9d two l>ge r&om primes & multiply
!m tgr1 factor+ a #aej-digit numb} t is
! product ( two l>ge primes wd take #ajj
million comput}s op}at+ at #aj million
9/ruc;ns p} second ab #ej million ye>s
"u ! fa/e/ algori?ms available 9 ! e>ly
#aiijs4 ,al? ! algori?ms h improv$1
factor+ a numb} t is a product ( two
l>ge primes is / computa;nally
prohibitive4
  ,! ,,rsa cryptosy/em "ws z foll{s4
,suppose t we *oose two r&om #aej-digit
prime numb}s ;p & ;q4 ,next1 we compute
! product _% n .k pq _: & al compute
_% f(n) .k m .k (p-1)(q-1) _:1 ":
_% .f _: is ! ,eul} _% .f _:-func;n4 ,n{
we />t *oos+ r&om 9teg}s ;,e        #dhi
until we f9d "o t is relatively prime to
;m2 t is1 we *oose ;,e s* t _% gcd (,e,
m) .k #1 _:4 ,us+ ! ,euclid1n algori?m1
we c f9d a numb} ;,d s* t _% ,d,e _l
#1(m"o"d m) _:4 ,! numb}s ;n & ;,e >e n{
made public4
  ,suppose n{ t p}son ;,b "<,bob"> wi%es
to s5d p}son ,a "<,alice"> a message ov}
a public l9e4 ,s9ce ;,e & ;n >e "kn to
"ey"o1 any"o c 5code messages4 ,bob f/
digitizes ! message ac to "s s*eme1 say
_% ,a .k #00, ,b .k #02, ''', ,z .k #25
_:4 ,if nec1 he w br1k ! message 9to
pieces s* t ea* piece is a positive
9teg} less ?an ;n4 ,suppose ;x is "o ( !
pieces4 ,bob =ms ! numb} _% y .k x~,e"
m"o"d n _: & s5ds ;y to ,alice4 ,=
,alice to recov} ;x1 %e ne$ only compute
_% x .k y~,d"m"o"d n _:4 ,only ,alice
"ks ;,d4

7777777777777777777777777777777777777777
,example #g4e
  ,2f explor+ ! !ory 2h ! ,,rsa
cryptosy/em or attempt+ to use      #dij
l>ge 9teg}s1 we w use "s small 9teg}s j
to see t ! sy/em does 9de$ "w4 ,suppose
t we wi% to s5d "s message1 : :5
digitiz$ is #be4 ,let _% p .k #23 _: &
_% q .k #29 _:4 ,!n
_%

n .k pq .k #667

_:
&
_%

f(n) .k m .k (p-1)(q-1) .k #616

_:4
,we c let _% ,e .k #487 _:1 s9ce _% gcd
(616, 487) .k #1 _:4 ,! 5cod$ message is
comput$ to 2
_%

#25~487"m"o"d #667 .k #169

_:4
,? computa;n c 2 r1sonably d"o by   #dia
us+ ! me?od ( rep1t$ squ>es z describ$ 9
,*apt} #d4 ,us+ ! ,euclid1n algori?m1 we
det}m9e t _% #191,e .k #1+151m _:2 "!=e1
! decrypt+ key is _% (n, ,d) .k (667,
191) _:4 ,we c recov} ! orig9al message
by calculat+
_%

#169~191"m"o"d #667 .k #25

_:4
gggggggggggggggggggggggggggggggggggggggg

  ,n{ let u exam9e :y ! ,,rsa
cryptosy/em "ws4 ,we "k t _% ,d,e _l
#1(m"o"d m) _:2 h;e1 "! exi/s a ;k s* t
_%

,d,e .k km+1 .k kf(n)+1

_:4
,"! >e two cases to 3sid}4 ,9 ! f/ case
assume t _% gcd (x, n) .k #1 _:4 ,!n by
,!orem #f4ah1
                                    #dib
_%

y~,d .k (x~,e")~,d .k x~,d,e .k x~km+1
.k (x~f(n)")~k"x .k (1)~k"x .k xm"o"d n

_:4
,s we see t ,alice recov}s ! orig9al
message ;x :5 %e computes _% y~,d"m"o"d
n _:4
  ,= ! o!r case1 assume t _% gcd (x, n)
/.k #1 _:4 ,s9ce _% n .k pq _: & _% x "k
n _:1 we "k ;x is a multiple ( ;p or a
multiple ( ;q1 b n bo?4 ,we w describe !
f/ possibil;y only1 s9ce ! second is
5tirely simil>4 ,"! is !n an 9teg} ;r1 )
_% r "k q _: & _% x .k rp _:4 ,note t we
h _% gcd (x, q) .k #1 _: & t _% m .k
f(n) .k (p-1)(q-1) .k f(p)f(q) _:4 ,!n1
us+ ,!orem #f4ah1 b n{ mod ;q1
_%

x~km .k x~kf(p)f(q) .k (x~f(q)")~kf(p)
.k (1)~kf(p) .k #1m"o"d q

_:4                                 #dic
,s "! is an 9teg} ;t s* t _% x~km .k
#1+tq _:4 ,?us1 ,alice al recov}s !
message 9 ? case1
_%

y~,d .k x~km+1 .k x~km"x .k (1+tq)x .k
x+tq(rp) .k x+trn .k xm"o"d n

_:4
  ,we c n{ ask h{ "o wd g ab br1k+ !
,,rsa cryptosy/em4 ,to f9d ;,d giv5 ;n &
;,e1 we simply ne$ to factor ;n & solve
= ;,d by us+ ! ,euclid1n algori?m4 ,if
we _h "kn t _% #667 .k #23*29 _: 9
,example #g4e1 we cd h recov}$ ;,d4

      ,message ,v}ifica;n
  ,"! is a problem ( message v}ifica;n 9
public key cryptosy/ems4 ,s9ce ! 5cod+
key is public k1 any"o has ! abil;y to
s5d an 5cod$ message4 ,if ,alice rcvs a
message f ,bob1 %e wd l to 2 able to
v}ify t x 0 ,bob :o actually s5t !
message4 ,suppose t ,bob's 5crypt+ key
is _% (n', ,e~'") _: & 8 decrypt+   #did
key is _% (n', ,d~'") _:4 ,al1 suppose t
,alice's 5crypt+ key is _% (n, ,e) _: &
h} decrypt+ key is _% (n, ,d) _:4 ,s9ce
5cryp;n keys >e public 9=ma;n1 !y c
ex*ange cod$ messages at _! 3v5i;e4 ,bob
wi%es to assure ,alice t ! message he is
s5d+ is au!ntic4 ,2f ,bob s5ds ! message
;x to ,alice1 he decrypts  ;x ) 8 {n
key3
_%

x' .k x~,d'"m"o"d n'

_:4
,any"o c *ange _% x' _: back to ;x j by
5cryp;n1 b only ,bob has ! abil;y to =m
_% x' _:4 ,n{ ,bob 5crypts _% x' _: )
,alice's 5cryp;n key to =m
_%

y' .k x'~,e"m"o"d n

_:1
a message t only ,alice c decode4 ,alice
decodes ! message & !n 5codes !     #die
result ) ,bob's key to r1d ! orig9al
message1 a message t cd h only be5 s5t
by ,bob4

      ,hi/orical ,note
  ,5crypt+ secret messages goes z f>
back z anci5t ,greece & ,rome4 ,z we "k1
,julius ,caes> us$ a simple %ift code to
s5d & rcv messages4 ,h{"e1 ! =mal /udy (
5cod+ & decod+ messages probably 2gan )
! ,>abs 9 ! #adjjs4 ,9 ! fifte5? &
sixte5? c5turies ma!maticians s* z
,alb}ti & ,viete 4cov}$ t monoalphabetic
cryptosy/ems (f}$ no r1l secur;y4 ,9 !
#ahjjs1 ;,f4 ;,w4 ,kasiski e/abli%$
me?ods = br1k+ ciph}s 9 : a ciph}text lr
c repres5t m ?an "o pla9text lr1 if !
same key 0 us$ s"eal "ts4 ,? 4cov}y l$
to ! use ( cryptosy/ems ) keys t 7 us$
only a s+le "t4 ,cryptography 0 plac$ on
firm ma!matical f.da;ns by s* p z ;,w4
,fri$man & ;,l4 ,hill 9 ! e>ly "p ( !
tw5tie? c5tury4
  ,! p}iod af ,_w ,w> ,i saw ! develop;t
( special-purpose ma*9es =          #dif
5crypt+ & decrypt+ messages1 &
ma!maticians 7 v active 9 cryptography
dur+ ,_w ,w> ,,ii4 ,ef=ts to p5etrate !
cryptosy/ems ( ! ,axis na;ns 7 organiz$
9 ,5gl& & 9 ! ,unit$ ,/ates by s*
notable ma!maticians z ,alan ,tur+ & ,a4
,a4 ,alb}t4 ,! ,allies ga9$ a trem5d|s
advantage 9 ,_w ,w> ,,ii by br1k+ !
ciph}s produc$ by ! ,g}man ,5igma ma*9e
& ! ,japanese ,purple ciph}s4
  ,by ! #aigjs1 9t}e/ 9 comm}cial
cryptography _h 2gun to take hold4 ,"! 0
a gr{+ ne$ to protect bank+ transac;ns1
comput} data1 & electronic mail4 ,9 !
e>ly #aigjs1 ,,ibm develop$ & imple;t$
,,luzif}1 ! =erunn} ( ! ,na;nal ,bur1u (
,/&>ds' ,data ,5cryp;n ,/&>d "<,,des">4
  ,! 3cept ( a public key cryptosy/em1
due to ,di6ie & ,hellman1 is v rec5t
"<#aigf">4 ,x 0 fur!r develop$ by
,rive/1 ,%amir1 & ,adleman ) ! ,,rsa
cryptosy/em "<#aigh">4 ,x is n "kn h{
secure any ( ~! sy/ems >e4 ,! trapdoor
knapsack cryptosy/em1 develop$ by ,m}kle
& ,hellman1 has be5 brok54 ,x is    #dig
/ an op5 "q :e!r or n ! ,,rsa sy/em c 2
brok54 ,9 #aiia1 ,,rsa ,laboratories
publi%$ a li/ ( semiprimes "<numb}s )
exactly two prime factors"> ) a ca%
prize = :o"e 0 able to provide a
factoriza;n
"<http3_/_/www4emc4com_/emc-plus_/rsa-l-
abs_/hi/orical_/!-rsa-*all5ge-numb}s4ht-
m;9#h ">4 ,al? ! *all5ge 5d$ 9 #bjjg1 _m
( ~! numb}s h n yet be5 factor$4
  ,"! be5 a grt d1l ( 3trov}sy ab rese>*
9 cryptography & cryptography xf4 ,9
#aibi1 :5 ,h5ry ,/imson1 ,secret>y (
,/ate "u ,h}b}t ,hoov}1 4miss$ ! ,black
,*amb} "<! ,/ate ,de"p;t's cryptography
divi.n"> on ! e?ical gr.ds t 8g5tlem5 d
n r1d ea* o!r's mail40 ,dur+ ! la/ two
decades ( ! tw5tie? c5tury1 ! ,na;nal
,secur;y ,ag5cy want$ to keep 9=ma;n ab
cryptography secret1 ":as ! academic
commun;y f"| = ! "r to publi% basic
rese>*4 ,curr5tly1 rese>* 9 ma!matical
cryptography & computa;nal numb} !ory is
v active1 & ma!maticians >e free to
publi% _! results 9 ~! >1s4         #dih
    #g4c ,r1d+ ,"qs

#a4 ,use ! `#1eul}.-phi"<">func;n 9
,sage to compute _% .f(#893 #456
#123) _:4

#b4 ,use ! `#1p{}.-mod"<">func;n 9 ,sage
to compute _% #7~324"(m"o"d #895) _:4

#c4 ,expla9 ! ma!matical basis = say+3
5crypt+ a message us+ an ,,rsa public
key is v simple computa;nally1 :ile
decrypt+ a communica;n )|t ! private key
is v h>d computa;nally4

#d4 ,expla9 h{ 9 ,,rsa message 5cod+
di6}s f message v}ifica;n4

#e4 ,expla9 h{ "o cd 2 ju/ifi$ 9 say+ t
,di6ie & ,hellman's proposal 9 #aigf 0
8revolu;n>y40

    #g4d ,ex}cises

#a4 ,5code `#1,,ixlovexma? us+ !    #dii
cryptosy/em 9 ,example #g4a4

,h9t4 `#1,,laoryhapdwk

#b4 ,decode `#7,,,zlooa wklva eh>q wkha
ilqdo,'`#'1 : 0 5cod$ us+ ! cryptosy/em
9 ,example #g4a4

#c4 ,assum+ t monoalphabetic code 0 us$
to 5code ! foll{+ secret message1 :at 0
! orig9al message8
`#7,,,aphuo egehp pexov fkeuh ckvue *kve
aphuo,'`#'
`#7,,,egehu exovl exdkt vgeft ehfke
uhckf tzexo,'`#'
`#7,,,vezdt tvkue xovkv 5ohk zfteh tehkq
l}(,'`#'
`#7,,,pvehp pexov }ykp g}yt gvkeg xdrte
rgaga,'`#'
  ,:at is ! signific.e ( ? message 9 !
hi/ory ( cryptography8

,h9t4 ,h9t3 `#7;,v "7 ;,e`#'1 `#7;,e "7
;,x`#' "<al us$ = spaces & punctua;n">1
`#7;,k "7 ;,r`#'4                   #ejj
#d4 ,:at is ! total numb} ( possible
monoalphabetic cryptosy/ems8 ,h{ secure
>e s* cryptosy/ems8

,h9t4 _% #26& -#1 _:

#e4 ,prove t a _% #2`*2 _: matrix ,a )
5tries 9 _% `;,z26 _: is 9v}tible if &
only if _% gcd (det (,a), 26) .k #1 _:4

#f4 ,giv5 ! matrix
_%

,a .k ,(#3 #4,)
      ,(#2 #3,)

_:1
use ! 5cryp;n func;n _% f(_;p) .k
,a_;p+_;b _: to 5code ! message
`#1,,cryptology1 ": _% _;b .k (2,
5)~t _:4 ,:at is ! decod+ func;n8

#g4 ,5crypt ea* ( ! foll{+ ,,rsa
messages ;x s t ;x is divid$ 9to blocks
( 9teg}s ( l5g? #b2 t is1 if _% x   #eja
.k #142528 _:1 5code #ad1 #be1 & #bh
sep>ately4
a4 _% n .k #3551, ,e .k #629, x .k
#31 _:
;b4 _% n .k #2257, ,e .k #47, x .k
#23 _:
;c4 _% n .k #120979, ,e .k #13251, x .k
#142371 _:
;d4 _% n .k #45629, ,e .k #781, x .k
#231561 _:

,h9t4 "<a"> #bgia2 "<;c">
_% #11213525032442 _:4

#h4 ,compute ! decod+ key ;,d = ea* ( !
5cod+ keys 9 ,ex}cise #g4d4g4

#i4 ,decrypt ea* ( ! foll{+ ,,rsa
messages ;y4
a4 _% n .k #3551, ,d .k #1997, y .k
#2791 _:
;b4 _% n .k #5893, ,d .k #81, y .k
#34 _:
;c4 _% n .k #120979, ,d .k #27331, y .k
#112135 _:                          #ejb
;d4 _% n .k #79403, ,d .k #671, y .k
#129381 _:

,h9t4 "<a"> #ca "<;c"> #ad4

#aj4 ,= ea* ( ! foll{+ 5cryp;n keys
_% (n, ,e) _: 9 ! ,,rsa cryptosy/em1
compute ;,d4
a4 _% (n, ,e) .k (451, 231) _:
;b4 _% (n, ,e) .k (3053, 1921) _:
;c4 _% (n, ,e) .k (37986733, 12371) _:
;d4 _% (n, ,e) .k (16394854313,
34578451) _:

,h9t4 "<a"> _% n .k #11*41 _:2 "<;c">
_% n .k #8779*4327 _:4

#aa4 ,5crypt$ messages >e (t5 divid$ 9to
blocks ( ;n lrs4 ,a message s* z `#7,,,!
_w wond}s :y,'`#' mi<t 2 5crypt$ z
`#7,,,jiw ocfrj lpoevyq ioc,'`#' b s5t z
`#7,,,jiw ocf rjl poe vyq ioc,'`#'4 ,:at
>e ! advantages ( us+ blocks ( ;n lrs8

#ab4 ,f9d 9teg}s ;n1 ;,e1 & ;,x     #ejc
s* t
_%

,x~,e _l ,x (m"o"d n)

_:4
,is ? a pot5tial problem 9 ! ,,rsa
cryptosy/em8

#ac4 ,e p}son 9 ! class %d 3/ruct an
,,rsa cryptosy/em us+ primes t >e #aj to
#ae digits l;g4 ,h& 9 _% (n, ,e) _: & an
5cod$ message4 ,keep ;,d secret4 ,see if
y c br1k "o ano!r's codes4

    #g4e ,addi;nal ,ex}cises3 ,primal;y
    & ,factor+
  ,9 ! ,,rsa cryptosy/em x is important
to 2 able to f9d l>ge prime numb}s
easily4 ,al1 ? cryptosy/em is n secure
if we c factor a composite numb} t is !
product ( two l>ge primes4 ,! solu;ns to
bo? ( ~! problems >e q easy4 ,to f9d |
if a numb} ;n is prime or to factor ;n1
we c use trial divi.n4 ,we simply   #ejd
divide ;n by _% d .k #2, #3, ''',
>n} _:4 ,ei a factoriza;n w 2 obta9$1 or
;n is prime if no ;d divides ;n4 ,!
problem is t s* a computa;n is
prohibitively "t-3sum+ if ;n is v l>ge4

#a4 ,a bett} algori?m = factor+ odd
positive 9teg}s is ~7,f}mat's
factoriza;n algori?m~'4
a4 ,let _% n .k ab _: 2 an odd composite
numb}4 ,prove t ;n c 2 writt5 z ! di6};e
( two p}fect squ>es3
_%

n .k x~2"-y~2 .k (x-y)(x+y)

_:4
,3sequ5tly1 a positive odd 9teg} c 2
factor$ exactly :5 we c f9d 9teg}s ;x &
;y s* t _% n .k x~2"-y~2 _:4
;b4 ,write a program to imple;t ! foll{+
factoriza;n algori?m bas$ on ! obs}va;n
9 "p "<a">4 ,! expres.n
`#1ceil+"<sqrt"<n">"> m1ns ! smalle/
9teg} grt} ?an or equal to !        #eje
squ>e root ( ;n4 ,write ano!r program to
d factoriza;n us+ trial divi.n & comp>e
! spe$ ( ! two algori?ms4 ,: algori?m is
fa/} & :y8
`#7;x 3"7 ceil+"<sqrt"<n">">`#'
`#7;y 3"7 #a`#'
`#7#a 3 :ile x`5#b - y`5#b `> ;n d`#'
    `#7;y 3"7 ;y "6 #a`#'
`#7if x`5#b - y`5#b `< ;n !n`#'
    `#7;x 3"7 ;x "6 #a`#'
    `#7;y 3"7 #a`#'
    `#1goto `#2#a
`#7else if x`5#b - y`5#b "7 #j !n`#'
    `#7a 3"7 ;x - ;y`#'
    `#7;b 3"7 ;x "6 ;y`#'
    `#7write ;n "7 a "9 ;b`#'

#b4 "<,primal;y ,te/+4"> ,recall
,f}mat's ,ll ,!orem f ,*apt} #f4 ,let ;p
2 prime ) _% gcd (a, p) .k #1 _:4 ,!n
_% a~p-1 _l #1(m"o"d p) _:4 ,we c use
,f}mat's ,ll ,!orem z a scre5+ te/ =
primes4 ,= example1 #ae _c 2 prime s9ce

                                    #ejf
_%

#2~15-1 _l #2~14 _l #4 (m"o"d #15)

_:4
,h{"e1 #ag is a pot5tial prime s9ce
_%

#2~17-1 _l #2~16 _l #1 (m"o"d #17)

_:4
,we say t an odd composite numb} ;n is a
~1pseudoprime if
_%

#2~n-1 _l #1 (m"o"d n)

_:4
,: ( ! foll{+ numb}s >e primes & : >e
pseudoprimes8
a4 #cdb
;b4 #haa
;c4 #fja
;d4 #efa
;e4 #gga                            #ejg
;f4 #fca

#c4 ,let ;n 2 an odd composite numb} &
;b 2 a positive 9teg} s* t _% gcd (b, n)
.k #1 _:4 ,if _% b~n-1 _l #1(m"o"d
n) _:1 !n ;n is a ~1pseudoprime ~1base
;b4 ,%{ t #cda is a pseudoprime base #b
b n a pseudoprime base #c4

#d4 ,write a program to det}m9e all
primes less ?an #bjjj us+ trial divi.n4
,write a second program t w det}m9e all
numb}s less ?an #bjjj t >e ei primes or
pseudoprimes4 ,comp>e ! spe$ ( ! two
programs4 ,h{ _m pseudoprimes >e "! 2l
#bjjj8
  ,"! exi/ composite numb}s t >e
pseudoprimes = all bases to : !y >e
relatively prime4 ,~! numb}s >e call$
~1,c>mi*ael ~1numb}s4 ,! f/ ,c>mi*ael
numb} is _% #561 .k #3*11*17 _:4 ,9
#aiib1 ,al=d1 ,granville1 & ,pom}.e
prov$ t "! >e an 9f9ite numb} (
,c>mi*ael numb}s .<#d.>4 ,h{"e1
,c>mi*ael numb}s >e v r>e4 ,"! >e   #ejh
only #bafc ,c>mi*ael numb}s less ?an
_% #25`*10~9 _:4 ,= m sophi/icat$
primal;y te/s1 see .<#a.>1 .<#f.>1 or
.<#g.>4

    #g4f ,ref};es & ,su7e/$ ,r1d+s
.<#a.>  ,bress|d1 ;,d4 ;,m4
  .7,factoriza;n & ,primal;y ,te/+.'4
  ,spr+}-,v}lag1 ,new ,york1 #aihi4
.<#b.>  ,di6ie1 ;,w4 & ,hellman1 ;,m4
  ;,e4 8,new ,direc;ns 9 ,cryptography10
  .7,,ieee ,trans4 ,9=m4 ,!ory.' ~1#bb
  "<#aigf">1 #fdd,-#ed4
.<#c.>  ,g>dn}1 ;,m4 8,ma!matical games3
  ,a new k9d ( ciph} t wd take millions
  ( ye>s to br1k10 .1,sci5tific
  .1,am}ican ~1#bcg "<#aigg">1
  #abj,-#bd4
.<#d.>  ,granville1 ,a4 8,primal;y ,te/+
  & ,c>mi*ael ,numb}s10 .7,notices ( !
  ,am}ican ,ma!matical ,society.' ~1#ci
  "<#aiib">1 #fif,-#gjj4
.<#e.>  ,hellman1 ;,m4 ;,e4 8,!
  ,ma!matics ( ,public ,key
  ,cryptography10 .1,sci5tific      #eji
  .1,am}ican ~1#bda "<#aigi">1
  #acj,-#ci4
.<#f.>  ,koblitz1 ;,n4 .7,a ,c|rse 9
  ,numb} ,!ory & ,cryptography.'4 #bnd
  $4 ,spr+}1 ,new ,york1 #aiid4
.<#g.>  ,pom}.e1 ;,c41 $4 8,cryptology &
  ,computa;nal ,numb} ,!ory01
  .7,proce$+s ( ,symposia 9 ,appli$
  ,ma!matics.' ~1#db "<#aiij"> ,am}ican
  ,ma!matical ,society1 ,provid;e1 ,,ri4
.<#h.>  ,rive/1 ;,r4 ;,l41 ,%amir1 ,a41
  & ,adleman1 ;,l41 8,a ,me?od = ,obta9+
  ,signatures & ,public-key
  ,cryptosy/ems10 .1,comm4 .1,,acm ~1#ba
  "<#aigh">1 #abj,-#bf4

    #g4g ,sage
  ,s9ce ,sage 2gan z s(tw>e to support
rese>* 9 numb} !ory1 we c qkly & easily
demon/rate ! 9t}nal "w+s ( ! ,,rsa
algori?m4 ,recognize t1 9 practice1 _m
o!r details s* z 5cod+ 2t lrs & 9teg}s1
or protect+ "o's private key1 >e equally
important = ! secur;y ( communica;ns4 ,s
,,rsa xf is j ! !oretical f.da;n4   #eaj
      ,3/ruct+ ,keys
  ,we w suppose t ,alice wants to s5d a
secret message to ,bob1 al;g ) message
v}ifica;n "<al "kn z a message ) a
digital signature">4 ,s we 2g9 ) !
3/ruc;n ( key pairs "<private & public">
= bo? ,alice & ,bob4 ,we f/ ne$ two l>ge
primes = bo? 9dividuals1 & _! product4
,9 practice1 values ( ;n wd h hundr$s (
digits1 r ?an j #ba z we h d"o "h4

`#7p.-a "7 next.-prime"<#aj`5#aj">`#'
`#7q.-a "7 next.-prime"<p.-a">`#'
`#7p.-b "7
next.-prime"<"<#c_/#b">"9#aj`5#aj">`#'
`#7q.-b "7 next.-prime"<p.-b">`#'
`#7n.-a "7 p.-a "9 q.-a`#'
`#7n.-b "7 p.-b "9 q.-b`#'
`#1n.-a1 `#1n.-b
-----------------
`#1"<#ajjjjjjjjebjjjjjjjfbg1
`#1#bbejjjjjjcjjjjjjjjjia">

  ,computa;nally1 ! value ( ! ,eul}
_% .f _:-func;n = a product (       #eaa
primes _% pq _: c 2 obta9$ f
_% (p-1)(q-1) _:1 b we cd use ,sage's
built-9 func;n j z well4

`#7m.-a "7 eul}.-phi"<n.-a">`#'
`#7m.-b "7 eul}.-phi"<n.-b">`#'
`#1m.-a1 `#1m.-b
-----------------
`#1"<#ajjjjjjjjejjjjjjjjegf1
`#1#bbejjjjjjbgjjjjjjjjgb">

  ,n{ we c cr1te ! 5cryp;n & decryp;n
expon5ts4 ,we *oose ! 5cryp;n expon5t z
a "<small"> numb} relatively prime to !
value ( ;m4 ,) ,sage we c factor ;m qkly
to help u *oose ? value4 ,9 practice we
wd n want to d ? computa;n = l>ge values
( ;m1 s we mi<t m easily *oose 8r&om0
values & *eck = ! f/ value : is
relatively prime to ;m4 ,! decryp;n
expon5t is ! multiplicative 9v}se1 mod
;m1 ( ! 5cryp;n expon5t4 ,if y 3/ruct an
improp} 5cryp;n expon5t "<n relatively
prime to ;m">1 ! computa;n ( !
multiplicative 9v}se w fail "<&     #eab
,sage w tell y s">4 ,we d ? twice ,-- =
bo? ,alice & ,bob4

`#1factor"<m.-a">
-----------------
`#7#b`5#f "9 #c "9 #aa "9 #ag "9 #aca "9
#eba "9 #gcbei "9 #eegjda`#'


`#7,e.-a "7 #e"9#bc`#'
`#7,d.-a "7 9v}se.-mod"<,e.-a1 m.-a">`#'
`#1,d.-a
-----------------
`#1#bjhfiefecbagciacjeee


`#1factor"<m.-b">
-----------------
`#7#b`5#c "9 #c`5#d "9 #ajg "9 #abihjbg
"9 #bejjjjjjja`#'




                                    #eac
`#7,e.-b "7 #g"9#bi`#'
`#7,d.-b "7 9v}se.-mod"<,e.-b1 m.-b">`#'
`#1,d.-b
-----------------
`#1#bdchdbcfdhbdfcjedaie

  ,at ? /age1 ea* 9dividual wd publi% _!
values ( ;n & ;,e1 :ile keep+ ;,d v
private & secure4 ,9 practice ;,d %d 2
protect$ on ! us}'s h>d disk by a pass~w
only ! {n} "ks4 ,= ev5 grt} secur;y a
p}son mi<t only h two copies ( _!
private key1 "o on a ,,usb memory /ick
!y alw c>ry ) !m1 & a backup 9 _! sage
deposit box4 ,e "t ! p}son uses ;,d !y
wd ne$ to provide ! pass~w4 ,! value (
;m c 2 4c>d$4 ,= ! record1 "h >e all !
keys3

`#7pr9t"<,7,alice's public key1 ;n301
n.-a1 8;,e301 ,e.-a">`#'
-----------------
`#7,alice's public key1 ;n3
#ajjjjjjjjebjjjjjjjfbg ;,e3 #aae`#'
                                    #ead
`#7pr9t"<,7,alice's private key1 ;,d301
,d.-a">`#'
-----------------
`#7,alice's private key1 ;,d3
#bjhfiefecbagciacjeee`#'


`#7pr9t"<,7,bob's public key1 ;n301
n.-b1 8;,e301 ,e.-b">`#'
-----------------
`#7,bob's public key1 ;n3
#bbejjjjjjcjjjjjjjjjia ;,e3 #bjc`#'


`#7pr9t"<,7,bob's private key1 ;,d301
,d.-b">`#'
-----------------
`#7,bob's private key1 ;,d3
#bdchdbcfdhbdfcjedaie`#'


`#7_? ,practice >ea "<n l9k$ = ,sage
,cell use">`#'

                                    #eae
      ,sign+ & ,5cod+ a ,message
  ,alice is go+ to 3/ruct a message z an
,5gli% ~w ) f|r lrs4 ,f ~! f|r lrs we w
3/ruct a s+le numb} to repres5t !
message 9 a =m we c use 9 ! ,,rsa
algori?m4 ,! func;n `#1ord"<"> w 3v}t a
s+le lr to xs ,,ascii code value1 a
numb} 2t #j & #abg4 ,if we use ~! numb}s
z 8digits0 mod #abh1 we c 2 sure t
,alice's f|r-lr ~w w 5code to an 9teg}
less ?an _% #128~4 .k #268, #435,
#456 _:4 ,! "picul> maximum value is n
important1 s l;g z x is small} ?an |r
value ( ;n s9ce all ( |r subsequ5t
>i?metic is mod ;n4 ,we *oose a popul>
f|r-lr ~w1 3v}t to ,,ascii 8digits0 ) a
li/ compreh5.n1 & !n 3/ruct ! 9teg} f !
digits ) ! "r base4 ,notice h{ we c tr1t
! ~w z a li/ & t ! f/ digit 9 ! li/ is 9
! 8"os0 place "<we say ! li/ is 9
8ll-5dian0 ord}">4



                                    #eaf
`#7~w "7 ',sage'`#'
`#7digits "7 .<ord"<lett}"> = lr 9
~w.>`#'
`#1digits
-----------------
`#7.<#hc1 #ig1 #ajc1 #aja.>`#'


`#7message "7 ,,zz"<digits1 #abh">`#'
`#1message
-----------------
`#1#baceabdjc

  ,f/1 ,alice w sign h} message to
provide message v}ifica;n4 ,%e uses h}
private key = ?1 s9ce ? is an act t only
%e %d 2 able to p}=m4

`#7sign$ "7 p{}.-mod"<message1 ,d.-a1
n.-a">`#'
`#1sign$
-----------------
`#1#dghchggdfddhibfahdbc

  ,!n ,alice 5crypts h} message s   #eag
t only ,bob c r1d x4 ,to d ?1 %e uses
,bob's public key4 ,notice h{ %e does n
h to ev5 "k ,bob ,- = example1 %e cd h
obta9$ ,bob's public key (f 8 web site
or maybe ,bob ann|nc$ 8 public key 9 an
adv}tise;t 9 ! .7,new ,york ,"ts.'4

`#75crypt$ "7 p{}.-mod"<sign$1 ,e.-b1
n.-b">`#'
`#15crypt$
-----------------
`#1#aaahffbjibiabjihdjdhh

  ,alice's communica;n is n{ r1dy to
travel on any communica;ns net"w1 no
matt} h{ 9secure ! net"w may be1 & no
matt} h{ _m snoops may 2 monitor+ !
net"w4

`#7_? ,practice >ea "<n l9k$ = ,sage
,cell use">`#'


      ,decod+ & ,v}ify+ a ,message
  ,n{ assume t ! value (            #eah
`#15crypt$ has r1*$ ,bob4 ,r1lize t ,bob
may n "k ,alice1 & r1lize t ,bob does n
ev5 necess>ily 2lieve :at he has rcvd
has g5u9ely orig9at$ f ,alice4 ,an
adv}s>y cd 2 try+ to 3fuse ,bob by s5d+
messages t claim to 2 f ,alice4 ,f/1
,bob m/ unwrap ! 5cyp;n ,alice has
provid$4 ,? is an act only ,bob1 z !
9t5d$ recipi5t1 %d 2 able to d4 ,& he
does x by us+ 8 private key1 : only he
"ks1 & : he has kept secure4

`#7decrypt$ "7 p{}.-mod"<5crypt$1 ,d.-b1
n.-b">`#'
`#1decrypt$
-----------------
`#1#dghchggdfddhibfahdbc

  ,"r n{1 ? m1ns v ll to ,bob4 ,anybody
cd h s5t hm an 5cod$ message4 ,h{"e1 ? 0
a message ,alice sign$4 ,lets unwrap !
message sign+4 ,notice t ? uses ,alice's
public key4 ,bob does n ne$ to "k ,alice
,- = example1 he cd obta9 ,alice's key
(f h} web site or maybe ,alice      #eai
ann|nc$ h} public key 9 an adv}tise;t 9
! .7,new ,york ,"ts.'4

`#7rcvd "7 p{}.-mod"<decrypt$1 ,e.-a1
n.-a">`#'
`#1rcvd
-----------------
`#1#baceabdjc

  ,bob ne$s to trans=m ? 9teg}
repres5ta;n back to a ~w ) lrs4 ,!
`#1*r"<"> func;n 3v}ts ,,ascii code
values to lrs1 & we use a li/ compreh5.n
to d ? rep1t$ly4

`#7digits "7
receiv$4digits"<base"7#abh">`#'
`#7lrs "7 .<*r"<ascii"> = ascii 9
digits.>`#'
`#1lrs
-----------------
`#7.<';,s'1 'a'1 ';g'1 ';e'.>`#'

  ,if we wd l a sli<tly m recognizable
result1 we c comb9e ! lrs 9to a     #ebj
/r+4

`#1'';4jo9"<lett}s">
-----------------
`#1',sage'

  ,bob is pl1s$ to obta9 s* an 9=mative
message f ,alice4 ,:at wd h happ5$ if an
impo/} _h s5t a message o/5sibly f
,alice1 or :at if an adv}s>y _h 9t}cept$
,alice's orig9al message & replac$ x ) a
tamp}$ message8 "<,! latt} is "kn z a
8man 9 ! middle0 attack4">
  ,9 ei case1 ! rogue "py wd n 2 able to
duplicate ,alice's f/ ac;n ,- sign+ h}
message4 ,if an adv}s>y "sh{ signs !
message1 or tamp}s ) x1 ! /ep ": ,bob
unwraps ! sign+ w l1d to total g>bage4
"<,try x6">  ,2c ,bob rcvd a legitimate
~w1 prop}ly capitaliz$1 he has 3fid;e t
! message he unsign$ is ! same z !
message ,alice sign$4 ,9 practice1 if
,alice s5t s"eal hundr$ ~ws z h}
message1 ! odds t x w unsign z cohr5t
text >e a/ronomically small4        #eba
  ,:at h we demon/rat$8
#a4 ,alice c s5d messages t only ,bob c
r1d4
#b4 ,bob c rcv secret messages f
anybody4
#c4 ,alice c sign messages1 s t !n ,bob
"<or anybody else">"ks !y >e g5u9ely f
,alice4
  ,( c|rse1 )|t mak+ new keys1 y c
rev}se ! roles ( ,alice & ,bob4 ,& if
,c>ol makes a key pair1 %e c communicate
) bo? ,alice & ,bob 9 ! same fa%ion4
  ,if y want to use ,,rsa public-key
5cryp;n s}i|sly1 9ve/igate ! op5 s|rce
s(tw>e ,,gnu ,privacy ,gu>d1 aka
`#1,,gpg1 : is freely available at
www4gnupg4org_/;9#i 4 ,notice t x only
makes s5se to use 5cryp;n programs t
all{ y to look at ! s|rce code4

`#7_? ,practice >ea "<n l9k$ = ,sage
,cell use">`#'


                                    #ebb
    #g4h ,sage ,ex}cises

#a4 ,3/ruct a keypair = ,alice us+ ! f/
two primes grt} ?an _% #10~12 _:4 ,= yr
*oice ( ;,e1 use a s+le prime numb} &
use ! smalle/ possible *oice4
  ,|tput ! values ( ;n1 ;,e1 & ;,d =
,alice4 ,!n use ,sage comm&s to v}ify t
,alice's 5cryp;n & decryp;n keys >e
multiplicative 9v}ses4

#b4 ,3/ruct a keypair = ,bob us+ ! f/
two primes grt} ?an _% #2*10~12 _:4 ,=
yr *oice ( ;,e1 use a s+le prime numb} &
use ! smalle/ possible *oice4 ,|tput !
values ( ;n1 ;,e1 & ;,d = ,alice4
  ,5code ! ~w `#1,ma? us+ ,,ascii values
9 ! same mann} z describ$ 9 ? sec;n
"<keep ! capitaliza;n z %{n">4 ,cr1te a
sign$ message ( ? ~w = communica;n f
,alice to ,bob4 ,|tput ! ?ree 9teg}s3 !
message1 ! sign$ message & ! sign$1
5crypt$ message4

#c4 ,demon/rate h{ ,bob 3v}ts !     #ebc
message rcvd f ,alice back 9to ! ~w
`#1,ma?4 ,|tput ! value ( ! 9t}m$iate
computa;ns & ! f9al human-r1dable
message4

#d4 ,cr1te a new sign$ message f ,alice
to ,bob4 ,simulate ! message 2+ tamp}$ )
by add+ #a to ! 9teg} ,bob rcvs1 2f he
decrypts x4 ,:at result does ,bob get =
! lrs ( ! message :5 he decrypts &
unsigns ! tamp}$ message8

#e4 "<,classroom ,ex}cise4"> ,organize a
class 9to s"eal small gr|ps4 ,h ea* gr|p
3/ruct key pairs ) "s m9imum size
"<digits 9 ;n">4 ,ea* gr|p %d keep _!
private key to !mvs1 b make _! public
key available to "eybody 9 ! room4 ,x cd
2 writt5 on ! bo>d "<}ror-pr"o"> or
maybe pa/$ 9 a public site l
pa/eb94com;9#aj 4 ,!n ea* gr|p c s5d a
sign$ message to ano!r gr|p1 ": ! gr|ps
cd 2 >rang$ logically 9 a circul> fa%ion
= ? purpose4 ,( c|rse1 messages %d 2
po/$ publicly z well4 ,expect a     #ebd
su3ess rate "s": 2t #ej.0 & #ajj.04
  ,if y d n d ? 9 class1 grab a /udy
buddy & s5d ea* o!r messages 9 ! same
mann}4 ,expect a su3ess rate ( #j.01
#ej.0 or #ajj.04



















                                    #ebe
