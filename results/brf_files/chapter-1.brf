            #a ,prelim9>ies

  ,a c}ta9 am.t ( ma!matical matur;y is
nec to f9d & /udy applica;ns ( ab/ract
algebra4 ,a basic k ( set !ory1
ma!matical 9duc;n1 equival;e rela;ns1 &
matrices is a m/4 ,ev5 m important is !
abil;y to r1d & "u/& ma!matical pro(s4
,9 ? *apt} we w |tl9e ! backgr.d ne$$ =
a c|rse 9 ab/ract algebra4

    #a4a ,a ,%ort ,note on ,pro(s
  ,ab/ract ma!matics is di6}5t f o!r
sci;es4 ,9 laboratory sci;es s* z
*emi/ry & physics1 sci5ti/s p}=m
exp}i;ts to 4cov} new pr9ciples & v}ify
!ories4 ,al? ma!matics is (t5 motivat$
by physical exp}i;ta;n or by comput}
simula;ns1 x is made rigor|s "? ! use (
logical >gu;ts4 ,9 /udy+ ab/ract
ma!matics1 we take :at is call$ an
axiomatic approa*2 t is1 we take a
collec;n ( objects _% `;,s _: & assume
"s rules ab _! /ructure4 ,~! rules >e
call$ ~1axioms4 ,us+ ! axioms =      #ab
_% `;,s _:1 we wi% to d}ive o!r 9=ma;n
ab _% `;,s _: by us+ logical >gu;ts4 ,we
require t |r axioms 2 3si/5t2 t is1 !y
%d n 3tradict "o ano!r4 ,we al dem& t "!
n 2 too _m axioms4 ,if a sy/em ( axioms
is too re/rictive1 "! w 2 few examples (
! ma!matical /ructure4
  ,a ~1/ate;t 9 logic or ma!matics is an
ass};n t is ei true or false4 ,3sid} !
foll{+ examples3
_4 4 _% #3+56-13+8_/2 _:4
_4 4 ,all cats >e black4
_4 4 _% #2+3 .k #5 _:4
_4 4 _% #2x .k #6 _: exactly :5 _% x .k
#4 _:4
_4 4 ,if _% ax~2"+bx+c .k #0 _: & _% a
/.k #0 _:1 !n
_%

x .k ?-b+->b~2"-4ac}/2a#

_:4
_4 4 _% x~3"-4x~2"+5x-6 _:4
,all b ! f/  & la/ examples >e /ate;ts1
& m/ 2 ei true or false4             #ac
  ,a ~1ma!matical ~1pro( is no?+ m ?an a
3v9c+ >gu;t ab ! a3uracy ( a /ate;t4 ,s*
an >gu;t %d 3ta9 5 detail to 3v9ce !
audi;e2 = 9/.e1 we c see t ! /ate;t 8
_% #2x .k #6 _: exactly :5 _% x .k #4 _:
0 is false by evaluat+ _% #2*4 _: & not+
t _% #6 /.k #8 _:1 an >gu;t t wd satisfy
any"o4 ,( c|rse1 audi;es may v>y widely3
pro(s c 2 address$ to ano!r /ud5t1 to a
pr(essor1 or to ! r1d} ( a text4 ,if m
detail ?an ne$$ is pres5t$ 9 ! pro(1 !n
! explana;n w 2 ei l;g-w9d$ or poorly
writt54 ,if too m* detail is omitt$1 !n
! pro( may n 2 3v9c+4 ,ag x is important
to keep ! audi;e 9 m9d4 ,hi< s*ool
/ud5ts require m* m detail ?an d
graduate /ud5ts4 ,a gd rule ( ?umb = an
>gu;t 9 an 9troductory ab/ract algebra
c|rse is t x %d 2 writt5 to 3v9ce "o's
pe}s1 :e!r ~? pe}s 2 o!r /ud5ts or o!r
r1d}s ( ! text4
  ,let u exam9e di6}5t types ( /ate;ts4
,a /ate;t cd 2 z simple z 8_% #10_/5 .k
#2 _:20 h{"e1 ma!maticians >e usually
9t}e/$ 9 m complex /ate;ts s* z      #ad
8,if ;p1 !n ;q10 ": ;p & ;q >e bo?
/ate;ts4 ,if c}ta9 /ate;ts >e "kn or
assum$ to 2 true1 we wi% to "k :at we c
say ab o!r /ate;ts4 ,"h ;p is call$ !
~1hypo!sis & ;q is "kn z ! ~13clu.n4
,3sid} ! foll{+ /ate;t3 ,if
_% ax~2"+bx+c .k #0 _: & _% a /.k #0 _:1
!n
_%

x .k ?-b+->b~2"-4ac}/2a#

_:4
,! hypo!sis is _% ax~2"+bx+c .k #0 _: &
_% a /.k #0 _:2 ! 3clu.n is
_%

x .k ?-b+->b~2"-4ac}/2a#

_:4
,notice t !  /ate;t says no?+ ab :e!r or
n ! hypo!sis is true4 ,h{"e1 if ? 5tire
/ate;t is true & we c %{ t _% ax~2"+bx+c
.k #0 _: ) _% a /.k #0 _: is true1 !n !
3clu.n .1m/ 2 true4 ,a pro( ( ?      #ae
/ate;t mi<t simply 2 a s}ies ( equa;ns3
_%

ax~2"+bx+c              .k #0
x~2"+?b/a#x             .k -?c/a#
x~2"+?b/a#x+(?b/2a#)~2" .k
(?b/2a#)~2"-?c/a#
(x+?b/2a#)~2"           .k
?b~2"-4ac/4a~2"#
x+?b/2a#                .k
?+->b~2"-4ac}/2a#
x                       .k
?-b+->b~2"-4ac}/2a#

_:4
  ,if we c prove a /ate;t true1 !n t
/ate;t is call$ a ~1proposi;n4 ,a
proposi;n ( major import.e is call$ a
~1!orem4 ,"s"ts 9/1d ( prov+ a !orem or
proposi;n all at once1 we br1k ! pro(
d{n 9to modules2 t is1 we prove s"eal
support+ proposi;ns1 : >e call$ ~1lemmas
1 & use ! results ( ~! proposi;ns to
prove ! ma9 result4 ,if we c prove a
proposi;n or a !orem1 we w (t51 )    #af
v ll ef=t1 2 able to d}ive o!r relat$
proposi;ns call$ ~1coroll>ies4

      ,"s ,cau;ns & ,su7es;ns
  ,"! >e s"eal di6}5t /rategies = prov+
proposi;ns4 ,9 addi;n to us+ di6}5t
me?ods ( pro(1 /ud5ts (t5 make "s common
mi/akes :5 !y >e f/ le>n+ h{ to prove
!orems4 ,to aid /ud5ts :o >e /udy+
ab/ract ma!matics = ! f/ "t1 we li/ "h
"s ( ! di6iculties t !y may 5c.t} & "s (
! /rategies ( pro( available to !m4 ,x
is a gd idea to keep ref}r+ back to ?
li/ z a rem9d}4 "<,o!r te*niques ( pro(
w 2come app>5t "?|t ? *apt} & ! rema9d}
( ! text4">
_4 4 ,a !orem _c 2 prov$ by example2
h{"e1 ! /&>d way to %{ t a /ate;t is n a
!orem is to provide a c.t}example4
_4 4 ,quantifi}s >e important4 ,~ws &
phrases s* z .1only1 .1= .1all1 .1= .1e1
& .1= .1"s possess di6}5t m1n+s4
_4 4 ,n"e assume any hypo!sis t is n
explicitly /at$ 9 ! !orem4 .7,y _c take
?+s = grant$4.'                      #ag
_4 4 ,suppose y wi% to %{ t an object
.1exi/s & is .1unique4 ,f/ %{ t "!
actually is s* an object4 ,to %{ t x is
unique1 assume t "! >e two s* objects1
say ;r & ;s1 & !n %{ t _% r .k s _:4
_4 4 ,"s"ts x is easi} to prove !
3trapositive ( a /ate;t4 ,prov+ ! /ate;t
8,if ;p1 !n ;q0 is exactly ! same z
prov+ ! /ate;t 8,if n ;q1 !n n ;p40
_4 4 ,al? x is usually bett} to f9d a
direct pro( ( a !orem1 ? task c "s"ts 2
di6icult4 ,x may 2 easi} to assume t !
!orem t y >e try+ to prove is false1 &
to hope t 9 ! c|rse ( yr >gu;t y >e =c$
to make "s /ate;t t _c possibly 2 true4
,rememb} t "o ( ! ma9 objectives ( hi<}
ma!matics is prov+ !orems4 ,!orems >e
tools t make new & productive applica;ns
( ma!matics possible4 ,we use examples
to give 9si<t  9to exi/+ !orems & to
fo/} 9tui;ns z to :at new !orems mi<t 2
true4 ,applica;ns1 examples1 & pro(s >e
ti<tly 9t}connect$,-m* m s ?an !y may
seem at f/ appe>.e4
                                     #ah
    #a4b ,sets & ,equival;e ,rela;ns

      ,set ,!ory
  ,a ~1set is a well-def9$ collec;n (
objects2 t is1 x is def9$ 9 s* a mann} t
we c det}m9e = any giv5 object ;x :e!r
or n ;x 2l;gs to ! set4 ,! objects t
2l;g to a set >e call$ xs ~1ele;ts or
~1memb}s4 ,we w d5ote sets by capital
lrs1 s* z ,a or ;,x2 if a is an ele;t (
! set ,a1 we write _% a `e ,a _:4
  ,a set is usually specifi$ ei by li/+
all ( xs ele;ts 9side a pair ( braces or
by /at+ ! prop}ty t det}m9es :e!r or n
an object ;x 2l;gs to ! set4 ,we mi<t
write
_%

,x .k .(x1, x2, ''', x;n".)

_:
= a set 3ta9+ ele;ts _% x1, x2, ''',
x;n _: or

                                     #ai
_%

,x .k .(x_3x satisfies `;,p.)

_:
if ea* ;x 9 ;,x satisfies a c}ta9
prop}ty _% `;,p _:4 ,= example1 if ;,e
is ! set ( ev5 positive 9teg}s1 we c
describe ;,e by writ+ ei
_%

,e .k .(2, 4, 6, '''.) or ,e .k .(x_3x
is an even integer and x .1 #0.)

_:4
,we write _% #2 `e ,e _: :5 we want to
say t #b is 9 ! set ;,e1 & _% -#3 /`e
,e _: to say t _% -#3 _: is n 9 ! set
;,e4
  ,"s ( ! m important sets t we w 3sid}
>e ! foll{+3



                                     #bj
_%

`;,n .k .(n_3n is a natural number.) .k
.(1, 2, 3, '''.)_2
`;,z .k .(n_3n is an integer.) .k .(''',
-1, 0, 1, 2, '''.)_2
`;,q .k .(r_3r is a rational number.) .k
.(p_/q_3p, q `e `;,z where q /.k #0.)_2
`;,r .k .(x_3x is a real number.)_2
`;,c .k .(z_3z is a complex number.)

_:4
  ,we c f9d v>i|s rela;ns 2t sets z well
z p}=m op}a;ns on sets4 ,a set ,a is a
~1subset ( ;,b1 writt5 _% ,a _"k ,b _:
or _% ,b _.1 ,a _:1 if e ele;t ( ,a is
al an ele;t ( ;,b4  ,= example1
_%

.(4, 5, 8.) _"k .(2, 3, 4, 5, 6, 7, 8,
9.)

_:
&
                                     #ba
_%

`;,n _"k `;,z _"k `;,q _"k `;,r _"k `;,c

_:4
,trivially1 e set is a subset ( xf4 ,a
set ;,b is a ~1prop} ~1subset ( a set ,a
if _% ,b _"k ,a _: b _% ,b /.k ,a _:4
,if ,a is n a subset ( ;,b1 we write
_% ,a /_"k ,b _:2 = example1 _% .(4, 7,
9.) /_"k .(2, 4, 5, 8, 9.) _:4 ,two sets
>e ~1equal1 writt5 _% ,a .k ,b _:1 if we
c %{ t _% ,a _"k ,b _: & _% ,b _"k
,a _:4
  ,x is 3v5i5t to h a set ) no ele;ts 9
x4 ,? set is call$ ! ~1empty ~1set & is
d5ot$ by _% _0 _:4 ,note t ! empty set
is a subset ( e set4
  ,to 3/ruct new sets | ( old sets1 we c
p}=m c}ta9 op}a;ns3 ! ~1union
_% ,a.+,b _: ( two sets ,a & ;,b is
def9$ z


                                     #bb
_%

,a.+,b .k .(x_3x `e ,a or x `e ,b.)_2

_:
! ~19t}sec;n ( ,a & ;,b  is def9$ by
_%

,a.%,b .k .(x_3x `e ,a and x `e ,b.)

_:4
 ,if _% ,a .k .(1, 3, 5.) _: & _% ,b .k
.(1, 2, 3, 9.) _:1 !n
_%

,a.+,b .k .(1, 2, 3, 5, 9.) and ,a.%,b
.k .(1, 3.)

_:4
,we c 3sid} ! union & ! 9t}sec;n ( m ?an
two sets4 ,9 ? case we write



                                     #bc
_%

".+%i .k #1<n},a;i .k ,a1.+''' .+,a;n

_:
&
_%

".%%i .k #1<n},a;i .k ,a1.%''' .%,a;n

_:
= ! union & 9t}sec;n1 respectively1 ( !
sets _% ,a1, ''', ,a;n _:4
  ,:5 two sets h no ele;ts 9 common1 !y
>e sd to 2 ~14jo9t;2 = example1 if ;,e
is ! set ( ev5 9teg}s & ,o is ! set (
odd 9teg}s1 !n ;,e & ,o >e 4jo9t4 ,two
sets ,a & ;,b >e 4jo9t exactly :5
_% ,a.%,b .k _0 _:4
  ,"s"ts we w "w )9 "o fix$ set ;,u1
call$ ! ~1univ}sal ~1set4 ,= any set
_% ,a _"k ,u _:1 we def9e ! ~1comple;t (
,a1 d5ot$ by _% ,a' _:1 to 2 ! set

                                     #bd
_%

,a' .k .(x_3x `e ,u and x /`e ,a.)

_:4
  ,we def9e ! ~1di6};e ( two sets ,a &
;,b to 2
_%

,a_*,b .k ,a.%,b' .k .(x_3x `e ,a and x
/`e ,b.)

_:4











                                     #be
7777777777777777777777777777777777777777
,example #a4a
  ,let _% `;,r _: 2 ! univ}sal set &
suppose t
_%

,a .k .(x `e `;,r_3#0 "k x "k: #3.) and
,b .k .(x `e `;,r_3#2 "k: x "k #4.)

_:4
,!n
_%

,a.%,b .k .(x `e `;,r_3#2 "k: x "k: #3.)
,a.+,b .k .(x `e `;,r_3#0 "k x "k #4.)
,a_*,b .k .(x `e `;,r_3#0 "k x "k #2.)
,a~'"  .k .(x `e `;,r_3x "k: #0 or x .1
#3.)

_:4
gggggggggggggggggggggggggggggggggggggggg


7777777777777777777777777777777777777777
,proposi;n #a4b                      #bf
  ,let ,a1 ;,b1 & ;,c 2 sets4 ,!n
#a4 _% ,a.+,a .k ,a _:1 _% ,a.%,a .k
,a _:1 & _% ,a_*,a .k _0 _:2
#b4 _% ,a.+_0 .k ,a _: & _% ,a.%_0 .k
_0 _:2
#c4 _% ,a.+(,b.+,c) .k (,a.+,b).+,c _: &
_% ,a.%(,b.%,c) .k (,a.%,b).%,c _:2
#d4 _% ,a.+,b .k ,b.+,a _: & _% ,a.%,b
.k ,b.%,a _:2
#e4 _% ,a.+(,b.%,c) .k
(,a.+,b).%(,a.+,c) _:2
#f4 _% ,a.%(,b.+,c) .k
(,a.%,b).+(,a.%,c) _:4

,pro(4 ,we w prove "<#a"> & "<#c"> &
l1ve ! rema9+ results to 2 prov5 9 !
ex}cises4
  "<#a"> ,obs}ve t






                                     #bg
_%

,a.+,a            .k .(x_3x `e ,a or x
`e ,a.)
.k .(x_3x `e ,a.)
.k ,a

_:
&
_%

,a.%,a            .k .(x_3x `e ,a and x
`e ,a.)
.k .(x_3x `e ,a.)
.k ,a

_:4
,al1 _% ,a_*,a .k ,a.%,a' .k _0 _:4
  "<#c"> ,= sets ,a1 ;,b1 & ;,c1





                                     #bh
_%

,a.+(,b.+,c)                           
 .k ,a.+.(x_3x `e ,b or x `e ,c.)
.k .(x_3x `e ,a or x `e ,b,  or x `e
,c.)
.k .(x_3x `e ,a or x `e ,b.).+,c
.k (,a.+,b).+,c

_:4
,a simil> >gu;t proves t 
_% ,a.%(,b.%,c) .k (,a.%,b).%,c _:4
gggggggggggggggggggggggggggggggggggggggg


7777777777777777777777777777777777777777
,!orem #a4c ,de ,morgan's ,laws4
  ,let ,a & ;,b 2 sets4 ,!n
#a4 _% (,a.+,b)' .k ,a'.%,b' _:2
#b4 _% (,a.%,b)' .k ,a'.+,b' _:4

,pro(4 "<#a"> ,if _% ,a.+,b .k _0 _:1 !n
! !orem foll{s immly s9ce bo? ,a & ;,b
>e ! empty set4 ,o!rwise1 we m/ %{ t
_% (,a.+,b)' _"k ,a'.%,b' _: &       #bi
_% (,a.+,b)' _.1 ,a'.%,b' _:4 ,let _% x
`e (,a.+,b)' _:4 ,!n _% x /`e ,a.+,b _:4
,s ;x is nei 9 ,a nor 9 ;,b1 by !
def9i;n ( ! union ( sets4 ,by ! def9i;n
( ! comple;t1 _% x `e ,a' _: & _% x `e
,b' _:4 ,"!=e1 _% x `e ,a'.%,b' _: & we
h _% (,a.+,b)' _"k ,a'.%,b' _:4
  ,to %{ ! rev}se 9clu.n1 suppose t _% x
`e ,a'.%,b' _:4 ,!n _% x `e ,a' _: &
_% x `e ,b' _:1 & s _% x /`e ,a _: &
_% x /`e ,b _:4 ,?us _% x /`e ,a.+,b _:
& s _% x `e (,a.+,b)' _:4 ,h;e1
_% (,a.+,b)' _.1 ,a'.%,b' _: & s
_% (,a.+,b)' .k ,a'.%,b' _:4
  ,! pro( ( "<#b"> is left z an ex}cise4
gggggggggggggggggggggggggggggggggggggggg








                                     #cj
7777777777777777777777777777777777777777
,example #a4d
  ,o!r rela;ns 2t sets (t5 hold true4 ,=
example1
_%

(,a_*,b).%(,b_*,a) .k _0

_:4
,to see t ? is true1 obs}ve t
_%

(,a_*,b).%(,b_*,a)    .k
(,a.%,b~'").%(,b.%,a~'")
.k ,a.%,a'.%,b.%,b~'"
.k _0

_:4
gggggggggggggggggggggggggggggggggggggggg


      ,c>tesian ,products & ,mapp+s
  ,giv5 sets ,a & ;,b1 we c def9e a new
set _% ,a`*,b _:1 call$ ! ~1,c>tesian
~1product ( ,a & ;,b1 z a set (      #ca
ord}$ pairs4 ,t is1
_%

,a`*,b .k .((a, b)_3a `e ,a and b `e
,b.)

_:4

















                                     #cb
7777777777777777777777777777777777777777
,example #a4e
  ,if _% ,a .k .(x, y.) _:1 _% ,b .k
.(1, 2, 3.) _:1 & _% ,c .k _0 _:1 !n
_% ,a`*,b _: is ! set
_%

.((x, 1), (x, 2), (x, 3), (y, 1), (y,
2), (y, 3).)

_:
&
_%

,a`*,c .k _0

_:4
gggggggggggggggggggggggggggggggggggggggg

  ,we def9e ! ~7,c>tesian product ( ;n
sets~' to 2



                                     #cc
_%

,a1`*''' `*,a;n .k .((a1, ''',
a;n)_3a;i" `e ,a;i" for i .k #1, ''',
n.)

_:4
,if _% ,a .k ,a1 .k ,a2 .k '''  .k
,a;n _:1 we (t5 write _% ,a~n _: =
_% ,a`*''' `*,a _: "<": ,a wd 2 writt5
;n "ts">4  ,= example1 ! set
_% `;,r~3 _: 3si/s ( all ( #c-tuples (
r1l numb}s4
  ,subsets ( _% ,a`*,b _: >e call$
~1rela;ns4 ,we w def9e a ~1mapp+ or
~1func;n _% f _"k ,a`*,b _: f a set ,a
to a set ;,b to 2 ! special type (
rela;n ": ea* ele;t _% a `e ,a _: has a
unique ele;t _% b `e ,b _: s* t _% (a,
b) `e f _:4 ,ano!r way ( say+ ? is t = e
ele;t 9 ,a1 ;f assigns a unique ele;t 9
;,b4 ,we usually write _% f"1 ,a $o
,b _: or _% ,a "$33o<f} ,b _:4 ,9/1d (
writ+ d{n ord}$ pairs  _% (a, b) `e
,a`*,b _:1 we write _% f(a) .k       #cd
b _: or _% f"1 a $|33o b _:4 ,! set  ,a
is call$ ! ~1doma9 ( ;f &
_%

f(,a) .k .(f(a)_3a `e ,a.) _"k ,b

_:
is call$ ! ~1range or ~1image ( ;f4 ,we
c ?9k ( ! ele;ts 9 ! func;n's doma9 z
9put values & ! ele;ts 9 ! func;n's
range z |tput values4

7777777777777777777777777777777777777777
,example #a4f
  ,suppose _% ,a .k .(1, 2, 3.) _: &
_% ,b .k .(a, b, c.) _:4 ,9 ,figure #a4g
we def9e rela;ns ;f & ;g f ,a to ;,b4 ,!
rela;n ;f is a mapp+1 b ;g is n 2c _% #1
`e ,a _: is n assign$ to a unique ele;t
9 ;,b2 t is1 _% g(1) .k a _: & _% g(1)
.k b _:4



                                     #ce
7777777777777777777777777777777777777777
      ,figure #a4g4 ,mapp+s & rela;ns
       `.<,two sets ( ovals1 ,a & ;,b1
     relat+ #a1 #b1 #c to a1 ;b1 ;c4  ,!
     f/ mapp+1 ;f1 s5ds #a to ;b & #b &
     #c to ;c4  ,! second rela;n1 ;g1
     s5ds #a to a & ;b1 #b to ;c1 & #c
     to a`.>
gggggggggggggggggggggggggggggggggggggggg















                                     #cf
       `.<,replace ? page ) ,figure
     #a4g4 ,mapp+s & rela;ns`.>






















                                     #cg
gggggggggggggggggggggggggggggggggggggggg

  ,giv5 a func;n _% f"1 ,a $o ,b _:1 x
is (t5 possible to write a li/ describ+
:at ! func;n does to ea* specific ele;t
9 ! doma94 ,h{"e1 n all func;ns c 2
describ$ 9 ? mann}4 ,= example1 ! func;n
_% f"1 `;,r $o `;,r _: t s5ds ea* r1l
numb} to xs cube is a mapp+ t m/ 2
describ$ by writ+ _% f(x) .k x~3 _: or
_% f"1 x $|33o x~3 _:4
  ,3sid} ! rela;n _% f"1 `;,q $o `;,z _:
giv5 by _% f(p_/q) .k p _:4 ,we "k t
_% #1_/2 .k #2_/4 _:1 b is _% f(1_/2) .k
#1 _: or #b8 ,? rela;n _c 2 a mapp+ 2c x
is n well-def9$4 ,a rela;n is
~1well-def9$ if ea* ele;t 9 ! doma9 is
assign$ to a .1unique ele;t 9 ! range4
  ,if _% f"1 ,a $o ,b _: is a map & !
image ( ;f is ;,b1 i4e41 _% f(,a) .k
,b _:1 !n ;f is sd to 2 ~1onto or
~1surjective4 ,9 o!r ~ws1 if "! exi/s an
_% a `e ,a _: = ea* _% b `e ,b _: s* t
_% f(a) .k b _:1 !n ;f is onto4 ,a map
is ~1"o-to-"o or ~19jective if       #ch
_% a1 /.k a2 _: implies _% f(a1) /.k
f(a2) _:4 ,equival5tly1 a func;n is
"o-to-"o if _% f(a1) .k f(a2) _: implies
_% a1 .k a2 _:4 ,a map t is bo? "o-to-"o
& onto is call$ ~1bijective4

7777777777777777777777777777777777777777
,example #a4h
  ,let _% f"1 `;,z $o `;,q _: 2 def9$ by
_% f(n) .k n_/1 _:4 ,!n ;f is "o-to-"o b
n onto4 ,def9e _% g"1 `;,q $o `;,z _: by
_% g(p_/q) .k p _: ": _% p_/q _: is a
ra;nal numb} express$ 9 xs l{e/ t}ms ) a
positive d5om9ator4 ,! func;n ;g is onto
b n "o-to-"o4
gggggggggggggggggggggggggggggggggggggggg

  ,giv5 two func;ns1 we c 3/ruct a new
func;n by us+ ! range ( ! f/ func;n z !
doma9 ( ! second func;n4 ,let _% f"1 ,a
$o ,b _: & _% g"1 ,b $o ,c _: 2 mapp+s4
,def9e a new map1 ! ~1composi;n ( ;f &
;g f ,a to ;,c1 by _% (g.*f)(x) .k
g(f(x)) _:4
                                     #ci
7777777777777777777777777777777777777777
      ,figure #a4i4 ,composi;n ( maps
       `.<,two sets ( ovals1 ,a & ;,b1
     relat+ #a1 #b1 #c to a1 ;b1 ;c & a1
     ;b1 ;c to ;,,,x1 ;y1 ;z4,'  ,! f/
     mapp+1 ;f1 s5ds #a to ;b1 #b  #b to
     ;c1 & #c to a4  ,! second rela;n1
     ;g1 s5ds a & ;b to ;,z & ;c to ;,x4
      ,! bottom map1 ;g circle ;f1 s5ds
     #a & #c to ;,z & #b to ,x4`.>
gggggggggggggggggggggggggggggggggggggggg













                                     #dj
       `.<,replace ? page ) ,figure
     #a4i4 ,composi;n ( maps`.>






















                                     #da
7777777777777777777777777777777777777777
,example #a4aj
  ,3sid} ! func;ns _% f"1 ,a $o ,b _: &
_% g"1 ,b $o ,c _: t >e def9$ 9
,figure #a4i "<top">4 ,! composi;n ( ~!
func;ns1 _% g.*f"1 ,a $o ,c _:1 is def9$
9 ,figure #a4i "<bottom">4
gggggggggggggggggggggggggggggggggggggggg
















                                     #db
7777777777777777777777777777777777777777
,example #a4aa
  ,let _% f(x) .k x~2 _: & _% g(x) .k
#2x+5 _:4 ,!n
_%

(f.*g)(x) .k f(g(x)) .k (2x+5)~2 .k
#4x~2"+20x+25

_:
&
_%

(g.*f)(x) .k g(f(x)) .k #2x~2"+5

_:4
,9 g5}al1 ord} makes a di6};e2 t is1 9
mo/ cases _% f.*g /.k g.*f _:4
gggggggggggggggggggggggggggggggggggggggg





                                     #dc
7777777777777777777777777777777777777777
,example #a4ab
  ,"s"ts x is ! case t _% f.*g .k
g.*f _:4 ,let _% f(x) .k x~3 _: &
_% g(x) .k <3>x} _:4 ,!n
_%

(f.*g)(x) .k f(g(x)) .k f(<3>x}) .k
(<3>x})~3 .k x

_:
&
_%

(g.*f)(x) .k g(f(x)) .k g(x~3") .k
<3>x~3"} .k x

_:4
gggggggggggggggggggggggggggggggggggggggg


7777777777777777777777777777777777777777
,example #a4ac
  ,giv5 a _% #2`*2 _: matrix
                                     #dd
_%

,a .k ,(a b,)
      ,(c d,)

_:1
we c def9e a map _% ,t;,a"1 `;,r~2 $o
`;,r~2 _: by
_%

,t;,a"(x, y) .k (ax+by, cx+dy)

_:
= _% (x, y) _: 9 _% `;,r~2 _:4 ,? is
actually matrix multiplica;n2 t is1
_%

,(a b,)(x%y) .k (ax+by%cx+dy)
,(c d,)

_:4
,maps f _% `;,r~n _: to _% `;,r~m _:
giv5 by matrices >e call$ ~1l9e> ~1maps
or ~1l9e> ~1trans=ma;ns4
gggggggggggggggggggggggggggggggggg   #de


7777777777777777777777777777777777777777
,example #a4ad
  ,suppose t _% ,s .k .(1, 2, 3.) _:4
,def9e a map _% .p"1 ,s $o ,s _: by
_%

.p(1) .k #2,  .p(2) .k #1,  .p(3) .k #3

_:4
,? is a bijective map4 ,an alt}native
way to  write _% .p _: is
_%

,(#1    #2    #3   ,) .k ,(#1 #2 #3,)
,(.p(1) .p(2) .p(3),)    ,(#2 #1 #3,)

_:4
,= any set ;,s1 a "o-to-"o & onto mapp+
_% .p"1 ,s $o ,s _: is call$ a
~1p}muta;n ( ;,s4
gggggggggggggggggggggggggggggggggggggggg

                                     #df
7777777777777777777777777777777777777777
,!orem #a4ae
  ,let _% f"1 ,a $o ,b _:1 _% g"1 ,b $o
,c _:1 & _% h"1 ,c $o ,d _:4 ,!n
#a4 ,! composi;n ( mapp+s is
associative2 t is1 _% (h.*g).*f .k
h.*(g.*f) _:2
#b4 ,if ;f & ;g >e bo? "o-to-"o1 !n !
mapp+ _% g.*f _: is "o-to-"o2
#c4 ,if ;f & ;g >e bo? onto1 !n ! mapp+
_% g.*f _: is onto2
#d4 ,if ;f & ;g >e bijective1 !n s is
_% g.*f _:4

,pro(4 ,we w prove "<#a"> & "<#c">4 ,"p
"<#b"> is left z an ex}cise4 ,"p "<#d">
foll{s directly f "<#b"> & "<#c">4
  "<#a"> ,we m/ %{ t
_%

h.*(g.*f) .k (h.*g).*f

_:4
,= _% a `e ,a _: we h
                                     #dg
_%

(h.*(g.*f))(a)    .k h((g.*f)(a))
.k h(g(f(a)))
.k (h.*g)(f(a))
.k ((h.*g).*f)(a)

_:4
  "<#c"> ,assume t ;f & ;g >e bo? onto
func;ns4 ,giv5 _% c `e ,c _:1 we m/ %{ t
"! exi/s an _% a `e ,a _: s* t
_% (g.*f)(a) .k g(f(a)) .k c _:4 ,h{"e1
s9ce ;g is onto1 "! is an ele;t _% b `e
,b _: s* t _% g(b) .k c _:4 ,simil>ly1
"! is an _% a `e ,a _: s* t _% f(a) .k
b _:4 ,acly1
_%

(g.*f)(a) .k g(f(a)) .k g(b) .k c

_:4
gggggggggggggggggggggggggggggggggggggggg

  ,if ;,s is any set1 we w use
_% id;,s _: or _% id _: to d5ote !   #dh
~1id5t;y ~1mapp+ f ;,s to xf4 ,def9e ?
map by _% id(s) .k s _: = all _% s `e
,s _:4 ,a map _% g"1 ,b $o ,a _: is an
~19v}se ~1mapp+ ( _% f"1 ,a $o ,b _: if
_% g.*f .k id;,a _: & _% f.*g .k
id;,b _:2 9 o!r ~ws1 ! 9v}se func;n ( a
func;n simply 8undoes0 ! func;n4 ,a map
is sd to 2 ~19v}tible if x has an 9v}se4
,we usually write _% f~-1 _: = ! 9v}se (
;f4

7777777777777777777777777777777777777777
,example #a4af
  ,! func;n _% f(x) .k x~3 _: has 9v}se
_% f~-1"(x) .k <3>x} _: by
,example #a4ab4
gggggggggggggggggggggggggggggggggggggggg







                                     #di
7777777777777777777777777777777777777777
,example #a4ag
  ,! natural log>i?m & ! expon5tial
func;ns1 _% f(x) .k ln x _: &
_% f~-1"(x) .k e~x _:1 >e 9v}ses ( ea*
o!r provid$ t we >e c>e;l ab *oos+
doma9s4 ,obs}ve t
_%

f(f~-1"(x)) .k f(e~x") .k ln e~x .k x

_:
&
_%

f~-1"(f(x)) .k f~-1"(ln x) .k e~ln x .k
x

_:
:5"e composi;n makes s5se4
gggggggggggggggggggggggggggggggggggggggg


7777777777777777777777777777777777777777
,example #a4ah                       #ej
  ,suppose t
_%

,a .k ,(#3 #1,)
      ,(#5 #2,)

_:4
,!n ,a def9es a map f _% `;,r~2 _: to
_% `;,r~2 _: by
_%

,t;,a"(x, y) .k (3x+y, 5x+2y)

_:4
,we c f9d an 9v}se map ( _% ,t;,a _: by
simply 9v}t+ ! matrix ,a2 t is1
_% ,t;,a~-1 .k ,t;,a;~-1 _:4 ,9 ?
example1
_%

,a~-1 .k ,(#2  -#1,)_2
         ,(-#5 #3 ,)

_:
h;e1 ! 9v}se map is giv5 by          #ea
_%

,t;,a~-1"(x, y) .k (2x-y, -5x+3y)

_:4
,x is easy to *eck t
_%

,t;,a~-1".*,t;,a"(x, y) .k
,t;,a".*,t;,a~-1"(x, y) .k (x, y)

_:4
,n e map has an 9v}se4 ,if we 3sid} !
map
_%

,t;,b"(x, y) .k (3x, 0)

_:
giv5 by ! matrix




                                     #eb
_%

,b .k ,(#3 #0,)
      ,(#0 #0,)

_:1
!n an 9v}se map wd h to 2 ( ! =m
_%

,t;,b~-1"(x, y) .k (ax+by, cx+dy)

_:
&
_%

(x, y) .k ,t;,b".*,t;,b~-1"(x, y) .k
(3ax+3by, 0)

_:
= all ;x & ;y4 ,cle>ly ? is  impossible
2c ;y mi<t n 2 #j4
gggggggggggggggggggggggggggggggggggggggg


                                     #ec
7777777777777777777777777777777777777777
,example #a4ai
  ,giv5 ! p}muta;n
_%

.p .k ,(#1 #2 #3,)
      ,(#2 #3 #1,)

_:
on _% ,s .k .(1, 2, 3.) _:1 x is easy to
see t ! p}muta;n def9$ by
_%

.p~-1 .k ,(#1 #2 #3,)
         ,(#3 #1 #2,)

_:
is ! 9v}se ( _% .p _:4 ,9 fact1 any
bijective mapp+ possesses an 9v}se1 z we
w see 9 ! next !orem4
gggggggggggggggggggggggggggggggggggggggg



                                     #ed
7777777777777777777777777777777777777777
,!orem #a4bj
  ,a mapp+ is 9v}tible if & only if x is
bo? "o-to-"o & onto4

,pro(4 ,suppose f/ t _% f"1 ,a $o ,b _:
is 9v}tible ) 9v}se _% g"1 ,b $o ,a _:4
,!n _% g.*f .k id;,a _: is ! id5t;y map2
t is1 _% g(f(a)) .k a _:4 ,if _% a1, a2
`e ,a _: ) _% f(a1) .k f(a2) _:1 !n
_% a1 .k g(f(a1)) .k g(f(a2)) .k a2 _:4
,3sequ5tly1 ;f is "o-to-"o4 ,n{ suppose
t _% b `e ,b _:4 ,to %{ t ;f is onto1 x
is nec to f9d an _% a `e ,a _: s* t
_% f(a) .k b _:1 b _% f(g(b)) .k b _: )
_% g(b) `e ,a _:4 ,let _% a .k g(b) _:4
  ,3v}sely1 let ;f 2 bijective & let
_% b `e ,b _:4 ,s9ce ;f is onto1 "!
exi/s an _% a `e ,a _: s* t _% f(a) .k
b _:4 ,2c ;f is "o-to-"o1 a m/ 2 unique4
,def9e ;g by lett+ _% g(b) .k a _:4 ,we
h n{ 3/ruct$ ! 9v}se ( ;f4
gggggggggggggggggggggggggggggggggggggggg

                                     #ee
      ,equival;e ,rela;ns & ,"pi;ns
  ,a funda;tal no;n 9 ma!matics is t (
equal;y4 ,we c g5}alize equal;y )
equival;e rela;ns & equival;e classes4
,an ~1equival;e ~1rela;n on a set ;,x is
a rela;n _% ,r _"k ,x`*,x _: s* t
_4 4 _% (x, x) `e ,r _: = all _% x `e
,x _: "<~1reflexive ~1prop}ty">2
_4 4 _% (x, y) `e ,r _: implies _% (y,
x) `e ,r _: "<~1symmetric ~1prop}ty">2
_4 4 _% (x, y) _: & _% (y, z) `e ,r _:
imply _% (x, z) `e ,r _: "<~1transitive
~1prop}ty">4
,giv5 an equival;e rela;n ;,r on a set
;,x1 we usually write _% x `: y _: 9/1d
( _% (x, y) `e ,r _:4 ,if ! equival;e
rela;n alr has an associat$ nota;n s* z
_% .k _:1 _% _l _:1 or _% `:.k _:1 we w
use t nota;n4





                                     #ef
7777777777777777777777777777777777777777
,example #a4ba
  ,let ;p1 ;q1 ;r1 & ;s 2 9teg}s1 ": ;q
& ;s >e nonz}o4 ,def9e _% p_/q `:
r_/s _: if _% ps .k qr _:4 ,cle>ly
_% `: _: is reflexive & symmetric4 ,to
%{ t x is al transitive1 suppose t
_% p_/q `: r_/s _: & _% r_/s `: t_/u _:1
) ;q1 ;s1 & ;u all nonz}o4 ,!n _% ps .k
qr _: & _% ru .k st _:4 ,"!=e1
_%

psu .k qru .k qst

_:4
,s9ce _% s /.k #0 _:1 _% pu .k qt _:4
,3sequ5tly1 _% p_/q `: t_/u _:4
gggggggggggggggggggggggggggggggggggggggg






                                     #eg
7777777777777777777777777777777777777777
,example #a4bb
  ,suppose t ;f & ;g >e di6}5tiable
func;ns on _% `;,r _:4 ,we c def9e an
equival;e rela;n on s* func;ns by lett+
_% f(x) `: g(x) _: if _% f'(x) .k
g'(x) _:4 ,x is cle> t _% `: _: is bo?
reflexive & symmetric4 ,to demon/rate
transitiv;y1 suppose t _% f(x) `:
g(x) _: & _% g(x) `: h(x) _:4 ,f
calculus we "k t _% f(x)-g(x) .k c1 _: &
_% g(x)-h(x) .k c2 _:1 ": _% c1 _: &
_% c2 _: >e bo? 3/ants4 ,h;e1
_%

f(x)-h(x) .k (f(x)-g(x))+(g(x)-h(x)) .k
c1+c2

_:
& _% f'(x)-h'(x) .k #0 _:4 ,"!=e1
_% f(x) `: h(x) _:4
gggggggggggggggggggggggggggggggggggggggg


                                     #eh
7777777777777777777777777777777777777777
,example #a4bc
  ,= _% (x1, y1) _: & _% (x2, y2) _: 9
_% `;,r~2 _:1 def9e _% (x1, y1) `: (x2,
y2) _: if _% x1~2"+y1~2 .k
x2~2"+y2~2 _:4 ,!n _% `: _: is an
equival;e rela;n on _% `;,r~2 _:4
gggggggggggggggggggggggggggggggggggggggg


7777777777777777777777777777777777777777
,example #a4bd
  ,let ,a & ;,b 2 _% #2`*2 _: matrices )
5tries 9 ! r1l numb}s4 ,we c def9e an
equival;e rela;n on ! set ( _% #2`*2 _:
matrices1 by say+ _% ,a `: ,b _: if "!
exi/s an 9v}tible matrix ;,p s* t
_% ,p,a,p~-1 .k ,b _:4 ,= example1 if
_%

,a .k ,(#1  #2,) and ,b .k ,(-#18 #33,)
      ,(-#1 #1,)           ,(-#11 #20,)

_:1
!n _% ,a `: ,b _: s9ce               #ei
_% ,p,a,p~-1 .k ,b _: =
_%

,p .k ,(#2 #5,)
      ,(#1 #3,)

_:4
,let ,i 2 ! _% #2`*2 _: id5t;y matrix2 t
is1
_%

,i .k ,(#1 #0,)
      ,(#0 #1,)

_:4
,!n _% ,i,a,i~-1 .k ,i,a,i .k ,a _:2
"!=e1 ! rela;n is reflexive4 ,to %{
symmetry1 suppose t _% ,a `: ,b _:4 ,!n
"! exi/s an 9v}tible matrix ;,p s* t
_% ,p,a,p~-1 .k ,b _:4 ,s
_%

,a .k ,p~-1",b,p .k ,p~-1",b(,p~-1")~-1

_:4                                  #fj
,f9ally1 suppose t _% ,a `: ,b _: &
_% ,b `: ,c _:4 ,!n "! exi/ 9v}tible
matrices ;,p & ;,q s* t _% ,p,a,p~-1 .k
,b _: &  _% ,q,b,q~-1 .k ,c _:4 ,s9ce
_%

,c .k ,q,b,q~-1 .k ,q,p,a,p~-1",q~-1 .k
(,q,p),a(,q,p)~-1

_:1
! rela;n is transitive4 ,two matrices t
>e equival5t 9 ? mann} >e sd to 2
~1simil>4
gggggggggggggggggggggggggggggggggggggggg

  ,a ~1"pi;n _% `;,p _: ( a set ;,x is a
collec;n ( nonempty sets _% ,x1, ,x2,
''' _: s* t _% ,x;i".%,x;j .k _0 _: =
_% i /.k j _: & _% ".+%k},x;k .k ,x _:4
,let _% `: _: 2 an equival;e rela;n on a
set ;,x & let _% x `e ,x _:4 ,!n
_% `(x`) .k .(y `e ,x_3y `: x.) _: is
call$ ! ~1equival;e ~1class ( ;x4 ,we w
see t an equival;e rela;n gives rise to
a "pi;n via equival;e classes4       #fa
,al1 :5"e a "pi;n ( a set exi/s1 "! is
"s natural "uly+ equival;e rela;n1 z !
foll{+ !orem demon/rates4

7777777777777777777777777777777777777777
,!orem #a4be
  ,giv5 an equival;e rela;n _% `: _: on
a set ;,x1 ! equival;e classes ( ;,x =m
a "pi;n ( ;,x4 ,3v}sely1 if _% `;,p .k
.(,x;i".) _: is a "pi;n ( a set ;,x1 !n
"! is an equival;e rela;n on ;,x )
equival;e classes _% ,x;i _:4

,pro(4 ,suppose "! exi/s an equival;e
rela;n _% `: _: on ! set ;,x4 ,= any
_% x `e ,x _:1 ! reflexive prop}ty %{s t
_% x `e `(x`) _: & s _% `(x`) _: is
nonempty4 ,cle>ly _% ,x .k ".+%x `e
,x}`(x`) _:4 ,n{ let _% x, y `e ,x _:4
,we ne$ to %{ t ei _% `(x`) .k `(y`) _:
or _% `(x`).%`(y`) .k _0 _:4 ,suppose t
! 9t}sec;n ( _% `(x`) _: & _% `(y`) _:
is n empty & t _% z `e `(x`).%`(y`) _:4
,!n _% z `: x _: & _% z `: y _:4 ,by
symmetry & transitiv;y _% x `:       #fb
y _:2 h;e1 _% `(x`) _"k `(y`) _:4
,simil>ly1 _% `(y`) _"k `(x`) _: & s
_% `(x`) .k `(y`) _:4 ,"!=e1 any two
equival;e classes >e ei 4jo9t or exactly
! same4
  ,3v}sely1 suppose t _% `;,p .k
.(,x;i".) _: is a "pi;n ( a set ;,x4
,let two ele;ts 2 equival5t if !y >e 9 !
same "pi;n4 ,cle>ly1 ! rela;n is
reflexive4 ,if ;x is 9 ! same "pi;n z
;y1 !n ;y is 9 ! same "pi;n z ;x1 s _% x
`: y _: implies _% y `: x _:4 ,f9ally1
if ;x is 9 ! same "pi;n z ;y & ;y is 9 !
same "pi;n z ;z1 !n ;x m/ 2 9 ! same
"pi;n z ;z1 & transitiv;y holds4
gggggggggggggggggggggggggggggggggggggggg


7777777777777777777777777777777777777777
,coroll>y #a4bf
  ,two equival;e classes ( an equival;e
rela;n >e ei 4jo9t or equal4
gggggggggggggggggggggggggggggggggggggggg

  ,let u exam9e "s ( ! "pi;ns giv5   #fc
by ! equival;e classes 9 ! la/ set (
examples4

7777777777777777777777777777777777777777
,example #a4bg
  ,9 ! equival;e rela;n 9
,example #a4ba1 two pairs ( 9teg}s1
_% (p, q) _: & _% (r, s) _:1 >e 9 ! same
equival;e class :5 !y r$uce to ! same
frac;n 9 xs l{e/ t}ms4
gggggggggggggggggggggggggggggggggggggggg


7777777777777777777777777777777777777777
,example #a4bh
  ,9 ! equival;e rela;n 9
,example #a4bb1 two func;ns _% f(x) _: &
_% g(x) _: >e 9 ! same "pi;n :5 !y di6}
by a 3/ant4
gggggggggggggggggggggggggggggggggggggggg




                                     #fd
7777777777777777777777777777777777777777
,example #a4bi
  ,we def9$ an equival;e class on
_% `;,r~2 _: by _% (x1, y1) `: (x2,
y2) _: if _% x1~2"+y1~2 .k
x2~2"+y2~2 _:4 ,two pairs ( r1l numb}s
>e 9 ! same "pi;n :5 !y lie on ! same
circle ab ! orig94
gggggggggggggggggggggggggggggggggggggggg


7777777777777777777777777777777777777777
,example #a4cj
  ,let ;r & ;s 2 two 9teg}s & suppose t
_% n `e `;,n _:4 ,we say t ;r is
~13gru5t to ;s ~1modulo ;n1 or ;r is
3gru5t to ;s mod ;n1 if _% r-s _: is
ev5ly divisible by ;n2 t is1 _% r-s .k
nk _:  = "s _% k `e `;,z _:4 ,9 ? case
we write _% r _l s(m"o"d n) _:4  ,=
example1 _% #41 _l #17(m"o"d #8) _: s9ce
_% #41-17 .k #24 _: is divisible by #h4
,we claim t 3gru;e modulo ;n =ms an
equival;e rela;n ( _% `;,z _:4 ,c}ta9ly
any 9teg} ;r is equival5t to xf      #fe
s9ce _% r-r .k #0 _: is divisible by ;n4
,we w n{ %{ t ! rela;n is symmetric4 ,if
_% r _l s(m"o"d n) _:1 !n _% r-s .k
-(s-r) _: is divisible by ;n4 ,s
_% s-r _: is divisible by ;n & _% s _l
r(m"o"d n) _:4 ,n{ suppose t _% r _l
s(m"o"d n) _: & _% s _l t(m"o"d n) _:4
,!n "! exi/ 9teg}s ;k & ;l s* t _% r-s
.k kn _: & _% s-t .k ln _:4 ,to %{
transitiv;y1 x is nec to prove t
_% r-t _: is divisible by ;n4 ,h{"e1
_%

r-t .k r-s+s-t .k kn+ln .k (k+l)n

_:1
& s _% r-t _: is divisible by ;n4
  ,if we 3sid} ! equival;e rela;n
e/abli%$ by ! 9teg}s modulo #c1 !n





                                     #ff
_%

`(0`) .k .(''', -3, 0, 3, 6, '''.),
`(1`) .k .(''', -2, 1, 4, 7, '''.),
`(2`) .k .(''', -1, 2, 5, 8, '''.)

_:4
,notice t _% `(0`).+`(1`).+`(2`) .k
`;,z _: & al t ! sets >e 4jo9t4 ,! sets
_% `(0`) _:1 _% `(1`) _:1 & _% `(2`) _:
=m a "pi;n ( ! 9teg}s4
  ,! 9teg}s modulo ;n >e a v important
example 9 ! /udy ( ab/ract algebra & w
2come q use;l 9 |r 9ve/iga;n ( v>i|s
algebraic /ructures s* z gr|ps & r+s4 ,9
|r 4cus.n ( ! 9teg}s modulo ;n we h
actually assum$ a result "kn z ! divi.n
algori?m1 : w 2 /at$ & prov$ 9
,*apt} #b4
gggggggggggggggggggggggggggggggggggggggg


    #a4c ,r1d+ ,"qs

#a4 ,:at d rela;ns & mapp+s h 9      #fg
common8

#b4 ,:at makes rela;ns & mapp+s di6}5t8

#c4 ,/ate c>e;lly ! ?ree def9+ prop}ties
( an equival;e rela;n4 ,9 o!r ~ws1 d n j
.1"n ! prop}ties1 give _! def9i;ns4

#d4 ,:at is ! big d1l ab equival;e
rela;ns8 "<,h9t3 ,"pi;ns4">

#e4 ,describe a g5}al te*nique = prov+ t
two sets >e equal4

    #a4d ,ex}cises

#a4 ,suppose t
_%

,a .k .(x_3x `e `;,n and x is even.),
,b .k .(x_3x `e `;,n and x is prime.),
,c .k .(x_3x `e `;,n and x is a multiple
of #5.)

_:4                                  #fh
,describe ea* ( ! foll{+ sets4
a4 _% ,a.%,b _:
;b4 _% ,b.%,c _:
;c4 _% ,a.+,b _:
;d4 _% ,a.%(,b.+,c) _:

,h9t4 "<a"> _% ,a.%,b .k .(2.) _:2
"<;b"> _% ,b.%,c .k .(5.) _:4

#b4 ,if _% ,a .k .(a, b, c.) _:1 _% ,b
.k .(1, 2, 3.) _:1 _% ,c .k .(x.) _:1 &
_% ,d .k _0 _:1 li/ all ( ! ele;ts 9 ea*
( ! foll{+ sets4
a4 _% ,a`*,b _:
;b4 _% ,b`*,a _:
;c4 _% ,a`*,b`*,c _:
;d4 _% ,a`*,d _:

,h9t4 "<a"> _% ,a`*,b .k .((a, 1), (a,
2), (a, 3), (b, 1), (b, 2), (b, 3), (c,
1), (c, 2), (c, 3).) _:2 "<;d">
_% ,a`*,d .k _0 _:4

#c4 ,f9d an example ( two nonempty sets
,a & ;,b = : _% ,a`*,b .k            #fi
,b`*,a _: is true4

#d4 ,prove _% ,a.+_0 .k ,a _: &
_% ,a.%_0 .k _0 _:4

#e4 ,prove _% ,a.+,b .k ,b.+,a _: &
_% ,a.%,b .k ,b.%,a _:4

#f4 ,prove _% ,a.+(,b.%,c) .k
(,a.+,b).%(,a.+,c) _:4

,h9t4 ,obs}ve t _% x `e ,a.+,b _: if &
only if _% x `e ,a _: or _% x `e ,b _:4
,equival5tly1 _% x `e ,b _: or _% x `e
,a _:1 : is ! same z _% x `e ,b.+,a _:4
,"!=e1 _% ,a.+,b .k ,b.+,a _:4

#g4 ,prove _% ,a.%(,b.+,c) .k
(,a.%,b).+(,a.%,c) _:4

#h4 ,prove _% ,a _"k ,b _: if & only if
_% ,a.%,b .k ,a _:4

#i4 ,prove _% (,a.%,b)' .k ,a'.+,b' _:4
                                     #gj
#aj4 ,prove _% ,a.+,b .k
(,a.%,b).+(,a_*,b).+(,b_*,a) _:4

,h9t4 _% (,a.%,b).+(,a_*,b).+(,b_*,a) .k
(,a.%,b).+(,a.%,b~'").+(,b.%,a~'") .k
`(,a.%(,b.+,b~'")`).+(,b.%,a~'") .k
,a.+(,b.%,a~'") .k (,a.+,b).%(,a.+,a~'")
.k ,a.+,b _:4

#aa4 ,prove _% (,a.+,b)`*,c .k
(,a`*,c).+(,b`*,c) _:4

#ab4 ,prove _% (,a.%,b)_*,b .k _0 _:4

#ac4 ,prove _% (,a.+,b)_*,b .k
,a_*,b _:4

#ad4 ,prove _% ,a_*(,b.+,c) .k
(,a_*,b).%(,a_*,c) _:4

,h9t4 _% ,a_*(,b.+,c) .k ,a.%(,b.+,c)'
.k (,a.%,a).%(,b'.%,c~'") .k
(,a.%,b~'").%(,a.%,c~'") .k
(,a_*,b).%(,a_*,c) _:4
                                     #ga
#ae4 ,prove _% ,a.%(,b_*,c) .k
(,a.%,b)_*(,a.%,c) _:4

#af4 ,prove _% (,a_*,b).+(,b_*,a) .k
(,a.+,b)_*(,a.%,b) _:4

#ag4 ,: ( ! foll{+ rela;ns _% f"1 `;,q
$o `;,q _: def9e a mapp+8 ,9 ea* case1
supply a r1son :y ;f is or is n a mapp+4
a4 _% f(p_/q) .k ?p+1/p-2# _:
;b4 _% f(p_/q) .k ?3p/3q# _:
;c4 _% f(p_/q) .k ?p+q/q~2"# _:
;d4 _% f(p_/q) .k ?3p~2"/7q~2"#-?p/q# _:

,h9t4 "<a"> ,n a map s9ce _% f(2_/3) _:
is undef9$2 "<;b"> ? is a map2 "<;c"> n
a map1 s9ce _% f(1_/2) .k #3_/4 _: b
_% f(2_/4) .k #3_/8 _:2 "<;d"> ? is a
map4

#ah4 ,det}m9e : ( ! foll{+ func;ns >e
"o-to-"o & : >e onto4 ,if ! func;n is n
onto1 det}m9e xs range4
a4 _% f"1 `;,r $o `;,r _: def9$ by
_% f(x) .k e~x _:                    #gb
;b4 _% f"1 `;,z $o `;,z _: def9$ by
_% f(n) .k n~2"+3 _:
;c4 _% f"1 `;,r $o `;,r _: def9$ by
_% f(x) .k sin x _:
;d4 _% f"1 `;,z $o `;,z _: def9$ by
_% f(x) .k x~2 _:

,h9t4 "<a"> ;f is "o-to-"o b n onto4
_% f(`;,r) .k .(x `e `;,r_3x .1 #0.) _:4
"<;c"> ;f is nei "o-to-"o nor onto4
_% f(`;,r) .k .(x_3-#1 "k: x "k: #1.)
_:4

#ai4 ,let _% f"1 ,a $o ,b _: & _% g"1 ,b
$o ,c _: 2 9v}tible mapp+s2 t is1 mapp+s
s* t _% f~-1 _: & _% g~-1 _: exi/4 ,%{ t
_% (g.*f)~-1 .k f~-1".*g~-1 _:4

#bj4
a4 ,def9e a func;n _% f"1 `;,n $o
`;,n _: t is "o-to-"o b n onto4
;b4 ,def9e a func;n _% f"1 `;,n $o
`;,n _: t is onto b n "o-to-"o4

,h9t4 "<a"> _% f(n) .k n+1 _:4       #gc
#ba4 ,prove ! rela;n def9$ on
_% `;,r~2 _: by _% (x1, y1) `: (x2,
y2) _: if _% x1~2"+y1~2 .k x2~2"+y2~2 _:
is an equival;e rela;n4

#bb4 ,let _% f"1 ,a $o ,b _: & _% g"1 ,b
$o ,c _: 2 maps4
a4 ,if ;f & ;g >e bo? "o-to-"o func;ns1
%{ t _% g.*f _: is "o-to-"o4
;b4 ,if _% g.*f _: is onto1 %{ t ;g is
onto4
;c4 ,if _% g.*f _: is "o-to-"o1 %{ t ;f
is "o-to-"o4
;d4 ,if _% g.*f _: is "o-to-"o & ;f is
onto1 %{ t ;g is "o-to-"o4
;e4 ,if _% g.*f _: is onto & ;g is
"o-to-"o1 %{ t ;f is onto4

,h9t4 "<a"> ,let _% x, y `e ,a _:4 ,!n
_% g(f(x)) .k (g.*f)(x) .k (g.*f)(y) .k
g(f(y)) _:4 ,?us1 _% f(x) .k f(y) _: &
_% x .k y _:1 s _% g.*f _: is "o-to-"o4
"<;b"> ,let _% c `e ,c _:1 !n _% c .k
(g.*f)(x) .k g(f(x)) _: = "s _% x `e
,a _:4 ,s9ce _% f(x) `e ,b _:1 ;g    #gd
is onto4

#bc4 ,def9e a func;n on ! r1l numb}s by
_%

f(x) .k ?x+1/x-1#

_:4
,:at >e ! doma9 & range ( ;f8 ,:at is !
9v}se ( ;f8 ,compute _% f.*f~-1 _: &
_% f~-1".*f _:4

,h9t4 _% f~-1"(x) .k (x+1)_/(x-1) _:4

#bd4 ,let _% f"1 ,x $o ,y _: 2 a map )
_% ,a1, ,a2 _"k ,x _: & _% ,b1, ,b2 _"k
,y _:4
a4 ,prove _% f(,a1.+,a2) .k
f(,a1).+f(,a2) _:4
;b4 ,prove _% f(,a1.%,a2) _"k
f(,a1).%f(,a2) _:4 ,give an example 9 :
equal;y fails4
;c4 ,prove _% f~-1"(,b1.+,b2) .k
f~-1"(,b1).+f~-1"(,b2) _:1 ":
                                     #ge
_%

f~-1"(,b) .k .(x `e ,x "1 f(x) `e ,b.)

_:4
;d4 ,prove _% f~-1"(,b1.%,b2) .k
f~-1"(,b1).%f~-1"(,b2) _:4
;e4 ,prove _% f~-1"(,y_*,b1) .k
,x_*f~-1"(,b1) _:4

,h9t4 "<a"> ,let _% y `e f(,a1.+,a2) _:4
,!n "! exi/s an _% x `e ,a1.+,a2 _: s* t
_% f(x) .k y _:4 ,h;e1 _% y `e f(,a1) _:
or _% f(,a2) _:4 ,"!=e1 _% y `e
f(,a1).+f(,a2) _:4 ,3sequ5tly1
_% f(,a1.+,a2) _"k f(,a1).+f(,a2) _:4
,3v}sely1 if _% y `e f(,a1).+f(,a2) _:1
!n _% y `e f(,a1) _: or _% f(,a2) _:4
,h;e1 "! exi/s an ;x 9 _% ,a1 _: or
_% ,a2 _: s* t _% f(x) .k y _:4 ,?us1 "!
exi/s an _% x `e ,a1.+,a2 _: s* t
_% f(x) .k y _:4 ,"!=e1
_% f(,a1).+f(,a2) _"k f(,a1.+,a2) _:1 &
_% f(,a1.+,a2) .k f(,a1).+f(,a2) _:4
                                     #gf
#be4 ,det}m9e :e!r or n ! foll{+ rela;ns
>e equival;e rela;ns on ! giv5 set4 ,if
! rela;n is an equival;e rela;n1
describe ! "pi;n giv5 by x4 ,if ! rela;n
is n an equival;e rela;n1 /ate :y x
fails to 2 "o4
a4 _% x `: y _: 9 _% `;,r _: if _% x .1:
y _:
;b4 _% m `: n _: 9 _% `;,z _: if _% mn
.1 #0 _:
;c4 _% x `: y _: 9 _% `;,r _: if
_% |x-y| "k: #4 _:
;d4 _% m `: n _: 9 _% `;,z _: if _% m _l
n(m"o"d #6) _:

,h9t4 "<a"> ,! rela;n fails to 2
symmetric4 "<;b"> ,! rela;n is n
reflexive1 s9ce #j is n equival5t to xf4
"<;c"> ,! rela;n is n transitive4

#bf4 ,def9e a rela;n _% `: _: on
_% `;,r~2 _: by /at+ t _% (a, b) `: (c,
d) _: if & only if _% a~2"+b~2 "k:
c~2"+d~2 _:4 ,%{ t _% `: _: is reflexive
& transitive b n symmetric4          #gg
#bg4 ,%{ t an _% m`*n _: matrix gives
rise to a well-def9$ map f _% `;,r~n _:
to _% `;,r~m _:4

#bh4 ,f9d ! }ror 9 ! foll{+ >gu;t by
provid+ a c.t}example4 8,! reflexive
prop}ty is r$undant 9 ! axioms = an
equival;e rela;n4 ,if _% x `: y _:1 !n
_% y `: x _: by ! symmetric prop}ty4
,us+ ! transitive prop}ty1 we c d$uce t
_% x `: x _:40

,h9t4 ,let _% ,x .k `;,n.+.(>2}.) _: &
def9e _% x `: y _: if _% x+y `e `;,n _:4

#bi4 "<,projective ,r1l ,l9e4"> ,def9e a
rela;n on _% `;,r~2"_*.((0, 0).) _: by
lett+ _% (x1, y1) `: (x2, y2) _: if "!
exi/s a nonz}o r1l numb} _% .l _: s* t
_% (x1, y1) .k (.lx2, .ly2) _:4 ,prove t
_% `: _: def9es an equival;e rela;n on
_% `;,r~2"_*(0, 0) _:4 ,:at >e !
correspond+ equival;e classes8 ,?
equival;e rela;n def9es ! projective
l9e1 d5ot$ by _% `;,p(`;,r) _:1 :    #gh
is v important 9 geometry4

    #a4e ,ref};es & ,su7e/$ ,r1d+s
.<#a.>  ,>t91 ;,m4 .7,algebra "<,classic
  ,v}.n">.'4 #bnd $4 ,pe>son1 ,upp}
  ,saddle ,riv}1 ,,nj1 #bjah4
.<#b.>  ,*ilds1 ;,l4 .7,a ,3crete
  ,9troduc;n to ,hi<} ,algebra.'4 #bnd
  $4 ,spr+}-,v}lag1 ,new ,york1 #aiie4
.<#c.>  ,dummit1 ;,d4 & ,foote1 ;,r4
  .1,ab/ract .1,algebra4 #crd $4 ,wiley1
  ,new ,york1 #bjjc4
.<#d.>  ,ehrli*1 ;,g4 .7,funda;tal
  ,3cepts ( ,algebra.'4 ,,pws-,,k5t1
  ,bo/on1 #aiia4
.<#e.>  ,fralei<1 ;,j4 ;,b4 .7,a ,f/
  ,c|rse 9 ,ab/ract ,algebra.'4 #gth $4
  ,pe>son1 ,upp} ,saddle ,riv}1 ,,nj1
  #bjjc4
.<#f.>  ,gallian1 ;,j4 ,a4 .7,3tempor>y
  ,ab/ract ,algebra.'4 #gth $4
  ,brooks_/,cole1 ,belmont1 ,,ca1 #bjji4
.<#g.>  ,halmos1 ;,p4 .7,naive ,set
  ,!ory.'4  ,spr+}1 ,new ,york1 #aiia4
  ,"o ( ! be/ ref};es = set !ory4    #gi
.<#h.>  ,h}/e91 ,i4 ;,n4 .1,ab/ract
  .1,algebra4 #crd $4 ,wiley1 ,new
  ,york1 #aiif4
.<#i.>  ,hung}=d1 ;,t4 ;,w4 .1,algebra4
  ,spr+}1 ,new ,york1 #aigd4 ,"o ( !
  /&>d graduate algebra texts4
.<#aj.>  ,lang1 ;,s4 .1,algebra4 #crd $4
  ,spr+}1 ,new ,york1 #bjjb4 ,ano!r /&>d
  graduate text4
.<#aa.>  ,lidl1 ;,r4 & ,pilz1 ;,g4
  .7,appli$ ,ab/ract ,algebra.'4 #bnd $4
  ,spr+}1 ,new ,york1 #aiih4
.<#ab.>  ,mackiw1 ;,g4 .7,applica;ns (
  ,ab/ract ,algebra.'4 ,wiley1 ,new
  ,york1 #aihe4
.<#ac.>  ,nickelson1 ;,w4 ;,k4 
  .7,9troduc;n to ,ab/ract ,algebra.'4
  #crd $4 ,wiley1 ,new ,york1 #bjjf4
.<#ad.>  ,sol{1 ;,d4 .7,h{ to ,r1d & ,d
  ,pro(s.'4 #eth $4 ,wiley1 ,new ,york1
  #bjji4
.<#ae.>  van d} ,wa}d51 ;,b4 ;,l4 .7,a
  ,hi/ory ( ,algebra.'4 ,spr+}-,v}lag1
  ,new ,york1 #aihe4 ,an a3.t ( !
  hi/orical develop;t ( algebra4     #hj
    #a4f ,sage
  ,sage is a p{};l sy/em = /udy+ &
explor+ _m di6}5t >1s ( ma!matics4 ,9 ?
textbook1 y w /udy a v>iety ( algebraic
/ructures1 s* z gr|ps1 r+s & fields4
,sage does an excell5t job ( imple;t+ _m
f1tures ( ~! objects z we w see 9 !
*apt}s ah1d4 ,b "h & n{1 9 ? 9itial
*apt}1 we w 3c5trate on a few g5}al ways
( gett+ ! mo/ | ( "w+ ) ,sage4
  ,y may use ,sage s"eal di6}5t ways4 ,x
may 2 us$ z a comm&-l9e program :5
9/all$ on yr {n comput}4 ,or x mi<t 2 a
web applica;n s* z ! ,sage,ma?,cl|d4 ,|r
writ+ w assume t y >e r1d+ ? z a "w%eet
)9 ! ,sage ,notebook "<a web br{s}
9t}face">1 or ? is a sec;n ( ! 5tire
book pres5t$ z web pages1 & y >e employ+
! ,sage ,cell ,s}v} via ~? pages4 ,af !
f/ few *apt}s ! explana;ns %d "w equally
well = :at"e vehicle y use to execute
,sage comm&s4

      ,execut+ ,sage ,comm&s
  ,mo/ ( yr 9t}ac;n w 2 by typ+      #ha
comm&s 9to a .1compute .1cell4 ,if y >e
r1d+ ? 9 ! ,sage ,notebook or z a
webpage v}.n ( ! book1 !n y w see a
compute cell j 2l ? p>agraph4 ,click
once 9side ! compute cell & if y >e 9 !
,sage ,notebook1 y w get a m 4t9ctive
bord} >.d x1 a bl9k+ cursor 9side1 plus
a cute ll 8evaluate0 l9k 2l4


  ,at ! cursor1 type `#1#b"6#b & !n
click on ! evaluate l9k4 ,did a `#2#d
appe> 2l ! cell8 ,if s1 y h su3ess;lly
s5t a comm& (f = ,sage to evaluate & y h
rcvd back ! "<correct"> answ}4
  ,"h is ano!r compute cell4 ,try
evaluat+ ! comm& `#1factorial"<#cjj">
"h4


  ,hmmmmm4 ,t is q a big 9teg}6 ,if y
see sla%es at ! 5d ( ea* l9e1 ? m1ns !
result is 3t9u$ onto ! next l9e1 s9ce "!
>e #fae total digits 9 ! result4
  ,to make new compute cells 9 !     #hb
,sage ,notebook "<only">1 hov} yr m|se j
abv ano!r compute cell1 or j 2l "s |tput
f a compute cell4 ,:5 y see a sk9ny blue
b> acr ! wid? ( yr "w%eet1 click & y w
op5 up a new compute cell1 r1dy = 9put4
,note t yr "w%eet w rememb} any
calcula;ns y make1 9 ! ord} y make !m1
no matt} ": y put ! cells1 s x is be/ to
/ay organiz$ & add new cells at !
bottom4
  ,try plac+ yr cursor j 2l ! mon/r|s
value ( _% #300& _: t y h4 ,click on !
blue b> & try ano!r factorial computa;n
9 ! new compute cell4
  ,ea* compute cell w %{ |tput due to
only ! v la/ comm& 9 ! cell4 ,try to
pr$ict ! foll{+ |tput 2f evaluat+ !
cell4






                                     #hc
`#7a "7 #aj`#'
`#7;b "7 #f`#'
`#7;b "7 ;b - #aj`#'
`#7a "7 a "6 #bj`#'
`#2a
-----------------
`#1#cj

  ,! foll{+ compute cell w n pr9t any?+
s9ce ! "o comm& does n cr1te |tput4 ,b x
w h an e6ect1 z y c see :5 y execute !
subsequ5t cell4 ,notice h{ ? uses !
value ( `#2;b f abv4 ,execute ? compute
cell .1once4 ,exactly once4 ,ev5 if x
.1appe>s to d no?+4 ,if y execute ! cell
twice1 yr cr$it c>d may 2 *>g$ twice4

`#7;b "7 ;b "6 #ej`#'

  ,n{ execute ? cell1 : w produce "s
|tput4



                                     #hd
`#7;b "6 #bj`#'
-----------------
`#1#ff

  ,s `#2;b came 9to exi/;e z `#2#f4 ,we
subtract$ #aj immly afw4 ,!n a subsequ5t
cell add$ `#1#ej4 ,? assumes y execut$ ?
cell .1exactly once6 ,9 ! la/ cell we
cr1te `#1b"6#bj "<b d n save x"> & x is
? value "<#ff"> t is |tput1 :ile `#2;b
is / #df4
  ,y c comb9e s"eal comm&s on "o l9e ) a
semi-colon4 ,? is a grt way to get
multiple |tputs f a compute cell4 ,!
syntax = build+ a matrix %d 2 "s:at
obvi|s :5 y see ! |tput1 b if n1 x is n
"picul>ly important to "u/& n{4

`#7,a "7 matrix"<.<.<#c1 #a.>1
.<#e1b.>.>">2 ,a`#'
-----------------
`#1.<#c"a.>
`#1.<#e"b.>

                                     #he
`#7pr9t"<,a">2 pr9t"<">2
pr9t"<,a49v}se"<">">`#'
-----------------
`#1.<#c"a.>
`#1.<#e"b.>
`#1`<,,blankl9e`>
`#7.< #b -#a.>`#'
`#1.<-#e  `#1#c.>


      ,imm ,help
  ,"s comm&s 9 ,sage >e 8func;ns10 an
example is `#1factorial"<"> abv4 ,o!r
comm&s >e 8me?ods0 ( an object & >e l
"*i/ics ( objects1 an example is
`#1;49v}se"<"> z a me?od ( a matrix4
,once y "k h{ to cr1te an object "<s* z
a matrix">1 !n x is easy to see all !
available me?ods4 ,write ! "n ( !
object1 place a p}iod "<8dot0"> & hit !
,,tab key4 ,if y h `#2,a def9$ f abv1 !n
! compute cell 2l is r1dy to g1 click
9to x & !n hit ,,tab "<n 8evaluate06">4
,y %d get a l;g li/ ( possible me?ods4
                                     #hf
`#1,a4

  ,to get "s help on h{ to use a me?od )
an object1 write xs "n af a dot "<) no
p>5!ses"> & !n use a "q-m>k & hit ,,tab4
"<,hit ! escape key 8,,esc0 to remove !
li/1 or click on ! text = a me?od4">

`#1,a49v}se8

  ,) "o m "q-m>k & a ,,tab y c see !
actual comput} 9/ruc;ns t 7 programm$
9to ,sage to make ! me?od "w1 once y
scoll d{n pa/ ! docu;ta;n delimit$ by !
triple quotes "<`#1,7,7,7">3

`#1,a49v}se88

  ,x is wor?:ile to see :at ,sage does
:5 "! is an }ror4 ,y w probably see a
lot ( ~! at f/1 & 9itially !y w 2 a bit
9timidat+4 ,b ) "t1 y w le>n h{ to use
!m e6ectively & y w al 2come m pr(ici5t
) ,sage & see !m less (t54 ,execute !
compute cell 2l1 x asks = ! 9v}se    #hg
( a matrix t has no 9v}se4 ,!n r}1d !
com;t>y4

`#7;,b "7 matrix"<.<.<#b1 #bj.>1 .<#e1
#ej.>.>">`#'
`#1,b49v}se"<">
-----------------
`#7,traceback "<mo/ rec5t call la/">3`#'
`#1444
`#7,z}o,divi.n,}ror3 matrix m/ 2
nons+ul>`#'

  ,click j to ! left ( ! }ror message to
exp& x fully "<ano!r click hides x
totally1 & a ?ird click br+s back !
a2reviat$ =m">4 ,r1d ! bottom ( an }ror
message f/1 x is yr be/ explana;n4 ,"h a
`#1,z}o,divi.n,}ror is n #ajj.0 a3urate1
b is close4 ,! matrix is n 9v}tible1 n
4simil> to h{ we _c divide scal>s by
z}o4 ,! rema9d} ( ! message 2g9s at !
top %{+ 7 ! }ror f/ happ5$ 9 yr code &
!n ! v>i|s places ": 9t}m$iate func;ns 7
call$1 until ! actual piece ( ,sage ": !
problem o3urr$4 ,"s"ts ? 9=ma;n w    #hh
give y "s clues1 "s"ts x is totally
undeciph}able4 ,s d n let x sc>e y if x
seems my/}i|s1 b d rememb} to alw r1d !
la/ l9e f/1 !n g back & r1d ! f/ few
l9es = "s?+ t looks l yr code4

      ,annotat+ ,yr ,"w
  ,x is easy to com;t on yr "w :5 y use
! ,sage ,notebook4 "<,! foll{+ only
applies if y >e r1d+ ? )9 a ,sage
,notebook4 ,if y >e n1 !n p}h y c g op5
up a "w%eet 9 ! ,sage ,notebook &
exp}i;t "!4"> ,y c op5 up a small
~w-processor by hov}+ yr m|se until y
get a sk9ny blue b> ag1 b n{ :5 y click1
al hold ! ,,%ift key at ! same "t4
,exp}i;t ) fonts1 colors1 bullet li/s1
etc & !n click ! 8,save *anges0 button
to exit4 ,d|ble-click on yr text if y
ne$ to g back & $it x lat}4
  ,op5 ! ~w-processor ag to cr1te a new
bit ( text "<maybe next to ! empty
compute cell j 2l">4 ,type all ( !
foll{+ .1exactly1
                                     #hi
`#7,py?agor1n ,!orem3
`sc`5#b"7a`5#b"6b`5#b`s`#'
& save yr *anges4 ,! symbols 2t ! doll>
signs >e writt5 ac to ! ma!matical
typesett+ language "kn z ,te,x ,- cruise
! 9t}net to le>n m ab ? v popul> tool4
"<,well1 x is extremely popul> am;g
ma!maticians & physical sci5ti/s4">



      ,li/s
  ,m* ( |r 9t}ac;n ) sets w 2 "? ,sage
li/s4 ,~! >e n r1lly sets ,- !y all{
duplicates1 & ord} matt}s4 ,b !y >e s
close to sets1 & s easy & p{};l to use t
we w use !m regul>ly4 ,we w use a fun
made-up li/ = practice1 ! quote m>ks m1n
! items >e j text1 ) no special
ma!matical m1n+4 ,execute ~! compute
cells z we "w "? !m4



                                     #ij
`#7zoo "7 .<'snake'1 'p>rot'1
'elephant'1 'baboon'1 'beetle'.>`#'
`#1zoo
-----------------
`#7.<'snake'1 'p>rot'1 'elephant'1
'baboon'1 'beetle'.>`#'

  ,s ! squ>e brackets def9e ! b.d>ies (
|r li/1 commas sep>ate items1 & we c
give ! li/ a "n4 ,to "w ) j "o ele;t ( !
li/1 we use ! "n & a pair ( brackets )
an 9dex4 ,notice t li/s h 9dices t .72g9
c.t+ at z}o.'4 ,? w seem odd at f/ & w
seem v natural lat}4

`#1zoo.<#b.>
-----------------
`#1'elephant'

  ,we c add a new cr1ture to ! zoo1 x is
jo9$ up at ! f> "r 5d4



                                     #ia
`#1zoo4app5d"<'o/ri*'">2 `#1zoo
-----------------
`#7.<'snake'1 'p>rot'1 'elephant'1
'baboon'1 'beetle'1 'o/ri*'.>`#'

  ,we c remove a cr1ture4

`#1zoo4remove"<'p>rot'">
`#1zoo
-----------------
`#7.<'snake'1 'elephant'1 'baboon'1
'beetle'1 'o/ri*'.>`#'

  ,we c extract a subli/4 ,"h we />t )
ele;t #a "<! elephant"> & g all ! way up
to1 .7b n 9clud+.'1 ele;t #c "<!
beetle">4 ,ag a bit odd1 b x w feel
natural lat}4 ,= n{1 notice t we >e
extract+ two ele;ts ( ! li/s1 exactly
_% #3-1 .k #2 _: ele;ts4




                                     #ib
`#7mammals "7 zoo.<#a3#c.>`#'
`#1mammals
-----------------
`#1.<'elephant'1 `#1'baboon'.>

  ,(t5 we w want to see if two li/s >e
equal4 ,to d t we w ne$ to sort a li/
f/4 ,a func;n cr1tes a new1 sort$ li/1
l1v+ ! orig9al al"o4 ,s we ne$ to save !
new "o ) a new "n4

`#7newzoo "7 sort$"<zoo">`#'
`#1newzoo
-----------------
`#7.<'baboon'1 'beetle'1 'elephant'1
'o/ri*'1 'snake'.>`#'


`#1zoo4sort"<">
`#1zoo
-----------------
`#7.<'baboon'1 'beetle'1 'elephant'1
'o/ri*'1 'snake'.>`#'

  ,notice t if y run ? la/ compute   #ic
cell yr zoo has *ang$ & "s comm&s abv w
n necess>ily execute ! same way4 ,if y
want to exp}i;t1 g all ! way back to !
f/ cr1;n ( ! zoo & />t execut+ cells ag
f "! ) a fre% zoo4
  ,a 3/ruc;n call$ a ~1li/ ~1compreh5.n
is especially p{};l1 especially s9ce x
alm exactly mirrors nota;n we use to
describe sets4 ,suppose we want to =m !
plural ( ! "ns ( ! cr1tures 9 |r zoo4
,we build a new li/1 bas$ on all ( !
ele;ts ( |r old li/4

`#7plural;y.-zoo "7 .<animal"6's' =
animal 9 zoo.>`#'
`#1plural;y.-zoo
-----------------
`#7.<'baboons'1 'beetles'1 'elephants'1
'o/ri*s'1 'snakes'.>`#'

  ,alm l x says3 we add an 8;s0 to ea*
animal "n1 = ea* animal 9 ! zoo1 & place
!m 9 a new li/4 ,p}fect4 "<,except =
gett+ ! plural ( 8o/ri*0 wr;g4">
                                     #id
      ,li/s ( ,9teg}s
  ,"o f9al type ( li/1 ) numb}s ? "t4 ,!
`#1srange"<"> func;n w cr1te li/s (
9teg}s4 "<,! 8;s0 9 ! "n /&s = 8,sage0 &
s w produce 9teg}s t ,sage "u/&s be/4
,_m e>ly di6iculties ) ,sage & gr|p !ory
c 2 alleviat$ by us+ only ? comm& to
cr1te li/s ( 9teg}s4"> ,9 xs simple/ =m
an 9voca;n l `#1srange"<#ab"> w cr1te a
li/ ( #ab 9teg}s1 .7/>t+ at z}o.' & "w+
up to1 .7b n 9clud+.'1 #ab4 ,does ? s.d
famili>8

`#7doz5 "7 srange"<#ab">2 doz5`#'
-----------------
`#7.<#j1 #a1 #b1 #c1 #d1 #e1 #f1 #g1 #h1
#i1 #aj1 #aa.>`#'

  ,"h >e two o!r =ms1 t y %d 2 able to
"u/& by /udy+ ! examples4




                                     #ie
`#7te5s "7 srange"<#ac1 #bj">2 te5s`#'
-----------------
`#7.<#ac1 #ad1 #ae1 #af1 #ag1 #ah1
#ai.>`#'


`#7decades "7 srange"<#aijj1 #bjjj1
#aj">2 decades`#'
-----------------
`#7.<#aijj1 #aiaj1 #aibj1 #aicj1 #aidj1
#aiej1 #aifj1 #aigj1 #aihj1 #aiij.>`#'


      ,sav+ & ,%>+ ,yr ,"w
  ,"! is a 8,save0 button 9 ! upp}-"r
corn} ( ! ,sage ,notebook4 ,? w save a
curr5t copy ( yr "w%eet t y c retrieve
yr "w f )9 yr notebook ag lat}1 ?|< y h
to re-execute all ! cells :5 y re-op5 !
"w%eet4
  ,"! is al a 8,file0 drop-d{n li/1 on !
left1 j abv yr v top compute cell "<n 2
3fus$ ) yr br{s}'s ,file m5u item6">4 ,y
w see a *oice "h label$ 8,save "w%eet to
a file4440 ,:5 y d ?1 y >e cr1t+ a   #if
copy ( yr "w%eet 9 ! `#1sws =mat "<%ort
= 8,sage ,"w,%eet0">4 ,y c email ? file1
or po/ x on a website1 = o!r ,sage us}s
& !y c use ! 8,upload0 l9k on ! homepage
( _! notebook to 9corporate a copy ( yr
"w%eet 9to _! notebook4
  ,"! >e o!r ways to %>e "w%eets t y c
exp}i;t )1 b ? gives y "o way to %>e any
"w%eet ) anybody alm any":4
  ,we h cov}$ a lot "h 9 ? sec;n1 s come
back lat} to pick up tidbits y mi<t h
miss$4 ,"! >e al _m m f1tures 9 ! ,sage
,notebook t we h n cov}$4

    #a4g ,sage ,ex}cises

#a4 ,? ex}cise is j ab mak+ sure y "k h{
to use ,sage4 ,y may 2 us+ ! ,sage
,notebook s}v} ! onl9e ,co,calc s}vice
"? yr web br{s}4 ,9 ei ev5t1 cr1te a new
"w%eet4 ,d "s non-trivial computa;n1
maybe a pretty plot or "s grue"s
num}ical computa;n to an 9sane preci.n4
,cr1te an 9t}e/+ li/ & exp}i;t ) x "s4
,maybe 9clude "s nicely =matt$       #ig
text or ,te,x us+ ! 9clud$
m9i-~w-processor ( ! ,sage ,notebook
"<hov} until a blue b> appe>s 2t cells &
!n %ift-click"> or cr1te com;t>y 9 cells
)9 ,co,calc us+ ! ~1magics `#1.0html or
`#1.0md on a l9e ( _! {n foll{$ by text
9 ,,html or ,m>kd{n syntax
"<respectively">4
  ,use :at"e me*anism yr 9/ructor has 9
place = submitt+ yr "w4 ,or save yr
"w%eet & !n trade ) a classmate4













                                     #ih
