             #b ,! ,9teg}s

  ,! 9teg}s >e ! build+ blocks (
ma!matics4 ,9 ? *apt} we w 9ve/igate !
funda;tal prop}ties ( ! 9teg}s1 9clud+
ma!matical 9duc;n1 ! divi.n algori?m1 &
! ,funda;tal ,!orem ( ,>i?metic4

    #b4a ,ma!matical ,9duc;n
  ,suppose we wi% to %{ t
_%

#1+2+''' +n .k ?n(n+1)/2#

_:
= any natural numb} ;n4 ,? =mula is
easily  v}ifi$ = small numb}s s* z _% n
.k #1 _:1 #b1 #c1 or #d1 b x is
impossible to v}ify = all natural numb}s
on a case-by-case basis4 ,to prove !
=mula true 9 g5}al1 a m g5}ic me?od is
requir$4
  ,suppose we h v}ifi$ ! equa;n = ! f/
;n cases4 ,we w attempt to %{ t we c
g5}ate ! =mula = ! _% (n+1) _:th     #ii
case f ? k4 ,! =mula is true = _% n .k
#1 _: s9ce
_%

#1 .k ?1(1+1)/2#

_:4
,if we h v}ifi$ ! f/ ;n cases1 !n
_%

#1+2+''' +n+(n+1)       .k
?n(n+1)/2#+n+1
.k ?n~2"+3n+2/2#
.k ?(n+1)`((n+1)+1`)/2#

_:4
,? is exactly ! =mula = ! _% (n+1) _:th
case4
  ,? me?od ( pro( is "kn z ~1ma!matical
~19duc;n4 ,9/1d ( attempt+ to v}ify a
/ate;t ab "s subset ;,s ( ! positive
9teg}s _% `;,n _: on a case-by-case
basis1 an impossible task if ;,s is an
9f9ite set1 we give a specific pro( = !
smalle/ 9teg} 2+ 3sid}$1 foll{$     #ajj
by a g5}ic >gu;t %{+ t if ! /ate;t holds
= a giv5 case1 !n x m/ al hold = ! next
case 9 ! sequ;e4 ,we summ>ize ma!matical
9duc;n 9 ! foll{+ axiom4

7777777777777777777777777777777777777777
,pr9ciple #b4a ,f/ ,pr9ciple (
,ma!matical ,9duc;n4
  ,let _% ,s(n) _: 2 a /ate;t ab 9teg}s
= _% n `e `;,n _: & suppose _% ,s(n0) _:
is true = "s 9teg} _% n0 _:4 ,if = all
9teg}s ;k ) _% k .1: n0 _:1 _% ,s(k) _:
implies t _% ,s(k+1) _: is true1 !n
_% ,s(n) _: is true = all 9teg}s ;n grt}
?an or equal to _% n0 _:4
gggggggggggggggggggggggggggggggggggggggg


7777777777777777777777777777777777777777
,example #b4b
  ,= all 9teg}s _% n .1: #3 _:1 _% #2~n
.1 n+4 _:4 ,s9ce


                                    #aja
_%

#8 .k #2~3 .1 #3+4 .k #7

_:1
! /ate;t is true = _% n0 .k #3 _:4
,assume t _% #2~k .1 k+4 _: = _% k .1:
#3 _:4 ,!n _% #2~k+1 .k #2*2~k .1
#2(k+4) _:4 ,b
_%

#2(k+4) .k #2k+8 .1 k+5 .k (k+1)+4

_:
s9ce ;k is positive4 ,h;e1 by 9duc;n1 !
/ate;t holds = all 9teg}s _% n .1:
#3 _:4
gggggggggggggggggggggggggggggggggggggggg






                                    #ajb
7777777777777777777777777777777777777777
,example #b4c
  ,e 9teg} _% #10~n+1"+3*10~n"+5 _: is
divisible by #i = _% n `e `;,n _:4 ,=
_% n .k #1 _:1
_%

#10~1+1"+3*10+5 .k #135 .k #9*15

_:
is divisible by #i4 ,suppose t
_% #10~k+1"+3*10~k"+5 _: is divisible by
#i = _% k .1: #1 _:4 ,!n
_%

#10~(k+1)+1"+3*10~k+1"+5     .k
#10~k+2"+3*10~k+1"+50-45
.k #10(10~k+1"+3*10~k"+5)-45

_:
is divisible by #i4
gggggggggggggggggggggggggggggggggggggggg


                                    #ajc
7777777777777777777777777777777777777777
,example #b4d
  ,we w prove ! b9omial !orem us+
ma!matical 9duc;n2 t is1
_%

(a+b)~n .k ".,s%k .k #0<n}(n%k)a~k"b~n-k

_:1
": a & ;b >e r1l numb}s1 _% n `e
`;,n _:1 &
_%

(n%k) .k ?n& /k& (n-k)&#

_:
is ! b9omial coe6ici5t4  ,we f/ %{ t
_%

(n+1%k) .k (n%k)+(n%k-1)

_:4
,? result foll{s f

                                    #ajd
_%

(n%k)+(n%k-1)             .k ?n& /k&
(n-k)& #+?n& /(k-1)& (n-k+1)& #
.k ?(n+1)& /k& (n+1-k)& #
.k (n+1%k)

_:4
,if _% n .k #1 _:1 ! b9omial !orem is
easy to v}ify4 ,n{ assume t ! result is
true = ;n grt} ?an or equal to #a4 ,!n













                                    #aje
_%

(a+b)~n+1"                             
                                       
   .k (a+b)(a+b)~n"
.k (a+b)(".,s%k .k #0<n}(n%k)a~k"b~n-k")
.k ".,s%k .k
#0<n}(n%k)a~k+1"b~n-k"+".,s%k .k
#0<n}(n%k)a~k"b~n+1-k"
.k a~n+1"+".,s%k .k
#1<n}(n%k-1)a~k"b~n+1-k"+".,s%k .k
#1<n}(n%k)a~k"b~n+1-k"+b~n+1"
.k a~n+1"+".,s%k .k
#1<n}`((n%k-1)+(n%k)`)a~k"b~n+1-k"+b~n+-
1"
.k ".,s%k .k #0<n+1}(n+1%k)a~k"b~n+1-k

_:4
gggggggggggggggggggggggggggggggggggggggg

  ,we h an equival5t /ate;t ( !
,pr9ciple ( ,ma!matical ,9duc;n t is (t5
v use;l4

                                    #ajf
7777777777777777777777777777777777777777
,pr9ciple #b4e ,second ,pr9ciple (
,ma!matical ,9duc;n4
  ,let _% ,s(n) _: 2 a /ate;t ab 9teg}s
= _% n `e `;,n _: & suppose _% ,s(n0) _:
is true = "s 9teg} _% n0 _:4 ,if
_% ,s(n0), ,s(n0+1), ''', ,s(k) _: imply
t _% ,s(k+1) _: = _% k .1: n0 _:1 !n !
/ate;t _% ,s(n) _: is true = all 9teg}s
_% n .1: n0 _:4
gggggggggggggggggggggggggggggggggggggggg

  ,a nonempty subset ;,s ( _% `;,z _: is
~1well-ord}$ if ;,s 3ta9s a l1/ ele;t4
,notice t ! set _% `;,z _: is n
well-ord}$ s9ce x does n 3ta9 a smalle/
ele;t4 ,h{"e1 ! natural numb}s >e
well-ord}$4

7777777777777777777777777777777777777777
,pr9ciple #b4f ,pr9ciple ( ,well-,ord}+4
  ,e nonempty subset ( ! natural numb}s
is well-ord}$4
gggggggggggggggggggggggggggggggggggggggg
                                    #ajg
  ,! ,pr9ciple ( ,well-,ord}+ is
equival5t to ! ,pr9ciple ( ,ma!matical
,9duc;n4

7777777777777777777777777777777777777777
,lemma #b4g
  ,! ,pr9ciple ( ,ma!matical ,9duc;n
implies t #a is ! l1/ positive natural
numb}4

,pro(4 ,let _% ,s .k .(n `e `;,n_3n .1:
#1.) _:4 ,!n _% #1 `e ,s _:4 ,assume t
_% n `e ,s _:4 ,s9ce _% #0 "k #1 _:1 x
m/ 2 ! case t _% n .k n+0 "k n+1 _:4
,"!=e1 _% #1 "k: n "k n+1 _:4
,3sequ5tly1 if _% n `e ,s _:1 !n
_% n+1 _: m/ al 2 9 ;,s1 & by !
,pr9ciple ( ,ma!matical ,9duc;n1 & we h
_% ,s .k `;,n _:4
gggggggggggggggggggggggggggggggggggggggg




                                    #ajh
7777777777777777777777777777777777777777
,!orem #b4h
  ,! ,pr9ciple ( ,ma!matical ,9duc;n
implies ! ,pr9ciple ( ,well-,ord}+4 ,t
is1 e nonempty subset ( _% `;,n _: 3ta9s
a l1/ ele;t4

,pro(4 ,we m/ %{ t if ;,s is a nonempty
subset ( ! natural numb}s1 !n ;,s 3ta9s
a l1/ ele;t4 ,if ;,s 3ta9s #a1 !n !
!orem is true by ,lemma #b4g4 ,assume t
if ;,s 3ta9s an 9teg} ;k s* t _% #1 "k:
k "k: n _:1 !n ;,s 3ta9s a l1/ ele;t4
,we w %{ t if a set ;,s 3ta9s an 9teg}
less ?an or equal to _% n+1 _:1 !n ;,s
has a l1/ ele;t4 ,if ;,s does n 3ta9 an
9teg} less ?an _% n+1 _:1 !n _% n+1 _:
is ! smalle/ 9teg} 9 ;,s4 ,o!rwise1 s9ce
;,s is nonempty1 ;,s m/ 3ta9 an 9teg}
less ?an or equal to ;n4 ,9 ? case1 by
9duc;n1 ;,s 3ta9s a l1/ ele;t4
gggggggggggggggggggggggggggggggggggggggg

  ,9duc;n c al 2 v use;l 9 =mulat+
def9i;ns4 ,= 9/.e1 "! >e two ways   #aji
to def9e _% n& _:1 ! factorial ( a
positive 9teg} ;n4
_4 4 ,! .1explicit def9i;n3 _% n&  .k
#1*2*3 ''' (n-1)*n _:4
_4 4 ,! .19ductive or .1recursive
def9i;n3 _% #1&  .k #1 _: & _% n&  .k
n(n-1)& _: = _% n .1 #1 _:4
,e gd ma!matician or comput} sci5ti/ "ks
t look+ at problems recursively1 z
oppos$ to explicitly1 (t5 results 9
bett} "u/&+ ( complex issues4

    #b4b ,! ,divi.n ,algori?m
  ,an applica;n ( ! ,pr9ciple (
,well-,ord}+ t we w use (t5 is ! divi.n
algori?m4

7777777777777777777777777777777777777777
,!orem #b4i ,divi.n ,algori?m4
  ,let a & ;b 2 9teg}s1 ) _% b .1 #0 _:4
,!n "! exi/ unique 9teg}s ;q & ;r s* t



                                    #aaj
_%

a .k bq+r

_:
": _% #0 "k: r "k b _:4

,pro(4 ,? is a p}fect example ( !
exi/;e-&-unique;s type ( pro(4 ,we m/ f/
prove t ! numb}s ;q & ;r actually exi/4
,!n we m/ %{ t if _% q' _: & _% r' _: >e
two o!r s* numb}s1 !n _% q .k q' _: &
_% r .k r' _:4
  ,exi/;e ( ;q & ;r4 ,let
_%

,s .k .(a-bk_3k `e `;,z and a-bk .1:
#0.)

_:4
,if _% #0 `e ,s _:1 !n ;b divides a1 &
we c let _% q .k a_/b _: & _% r .k
#0 _:4 ,if _% #0 /`e ,s _:1 we c use !
,well-,ord}+ ,pr9ciple4 ,we m/ f/ %{ t
;,s is nonempty4 ,if _% a .1        #aaa
#0 _:1 !n _% a-b*0 `e ,s _:4 ,if _% a "k
#0 _:1 !n _% a-b(2a) .k a(1-2b) `e
,s _:4 ,9 ei case _% ,s /.k _0 _:4 ,by !
,well-,ord}+ ,pr9ciple1 ;,s m/ h a
smalle/ memb}1 say _% r .k a-bq _:4
,"!=e1 _% a .k bq+r _:1 _% r .1: #0 _:4
,we n{ %{ t _% r "k b _:4 ,suppose t
_% r .1 b _:4 ,!n
_%

a-b(q+1) .k a-bq-b .k r-b .1 #0

_:4
,9 ? case we wd h _% a-b(q+1) _: 9 ! set
;,s4 ,b !n _% a-b(q+1) "k a-bq _:1 : wd
3tradict ! fact t _% r .k a-bq _: is !
smalle/ memb}  ( ;,s4 ,s _% r "k: b _:4
,s9ce _% #0 /`e ,s _:1 _% r /.k b _: & s
_% r "k b _:4
  ,unique;s ( ;q & ;r4 .7,unique;s ( ;q
& ;r4.' ,suppose "! exi/ 9teg}s ;r1
_% r' _:1 ;q1 & _% q' _: s* t


                                    #aab
_%

a .k bq+r, #0 "k: r "k b and a .k
bq~'"+r', #0 "k: r' "k b

_:4
,!n _% bq+r .k bq~'"+r' _:4 ,assume t
_% r' .1: r _:4 ,f ! la/ equa;n we h
_% b(q-q~'") .k r'-r _:2 "!=e1 ;b m/
divide _% r'-r _: & _% #0 "k: r'-r "k:
r' "k b _:4 ,? is possible only if
_% r'-r .k #0 _:4 ,h;e1 _% r .k r' _: &
_% q .k q' _:4
gggggggggggggggggggggggggggggggggggggggg

  ,let a & ;b 2 9teg}s4 ,if _% b .k
ak _: = "s 9teg} ;k1 we write _% a|b _:4
,an 9teg} ;d is call$ a ~1common
~1divisor ( a & ;b if _% d|a _: &
_% d|b _:4 ,! ~7grte/ common divisor~' (
9teg}s a & ;b is a positive 9teg} ;d s*
t ;d is a common divisor ( a & ;b & if
_% d' _: is any o!r common divisor ( a &
;b1 !n _% d'|d _:4  ,we write _% d .k
gcd (a, b) _:2 = example1 _% gcd    #aac
(24, 36) .k #12 _: & _% gcd (120, 102)
.k #6 _:4 ,we say t two 9teg}s a & ;b >e
~1relatively ~1prime if _% gcd (a, b) .k
#1 _:4

7777777777777777777777777777777777777777
,!orem #b4aj
  ,let a & ;b 2 nonz}o 9teg}s4 ,!n "!
exi/ 9teg}s ;r & ;s s* t
_%

gcd (a, b) .k ar+bs

_:4
,fur!rmore1 ! grte/ common divisor ( a &
;b is unique4

,pro(4 ,let
_%

,s .k .(am+bn_3m, n `e `;,z and am+bn .1
#0.)

_:4
,cle>ly1 ! set ;,s is nonempty2     #aad
h;e1 by ! ,well-,ord}+ ,pr9ciple ;,s m/
h a smalle/ memb}1 say _% d .k ar+bs _:4
,we claim t _% d .k gcd (a, b) _:4
,write _% a .k dq+r' _: ": _% #0 "k: r'
"k d _:4 ,if _% r' .1 #0 _:1 !n
_%

r~'"              .k a-dq
.k a-(ar+bs)q
.k a-arq-bsq
.k a(1-rq)+b(-sq)

_:1
: is 9 ;,s4 ,b ? wd 3tradict ! fact t ;d
is ! smalle/ memb} ( ;,s4 ,h;e1 _% r' .k
#0 _: & ;d divides a4 ,a simil> >gu;t
%{s t ;d divides ;b4 ,"!=e1 ;d is a
common divisor ( a & ;b4
  ,suppose t _% d' _: is ano!r common
divisor ( a & ;b1 & we want to %{ t
_% d'|d _:4 ,if we let _% a .k d'h _: &
_% b .k d'k _:1 !n


                                    #aae
_%

d .k ar+bs .k d'hr+d'ks .k d'(hr+ks)

_:4
,s _% d' _: m/ divide ;d4 ,h;e1 ;d m/ 2
! unique grte/ common divisor ( a & ;b4
gggggggggggggggggggggggggggggggggggggggg


7777777777777777777777777777777777777777
,coroll>y #b4aa
  ,let a & ;b 2 two 9teg}s t >e
relatively prime4 ,!n "! exi/ 9teg}s ;r
& ;s s* t _% ar+bs .k #1 _:4
gggggggggggggggggggggggggggggggggggggggg


      ,! ,euclid1n ,algori?m
  ,am;g o!r ?+s1 ,!orem #b4aj all{s u to
compute ! grte/ common divisor ( two
9teg}s4

7777777777777777777777777777777777777777
,example #b4ab                      #aaf
  ,let u compute ! grte/ common divisor
( #ide & #bdae4 ,f/ obs}ve t
_%

#2415 .k #945*2+525
#945  .k #525*1+420
#525  .k #420*1+105
#420  .k #105*4+0

_:4
,rev}s+ |r /eps1 #aje divides #dbj1 #aje
divides #ebe1 #aje divides #ide1 & #aje
divides #bdae4 ,h;e1 #aje divides bo?
#ide & #bdae4 ,if ;d 7 ano!r common
divisor ( #ide & #bdae1 !n ;d wd al h to
divide #aje4 ,"!=e1 _% gcd (945, 2415)
.k #105 _:4
  ,if we "w backw>d "? ! abv sequ;e (
equa;ns1 we c al obta9 numb}s ;r & ;s s*
t _% #945r+2415s .k #105 _:4 ,obs}ve t




                                    #aag
_%

#105                             .k
#525+(-1)*420
.k #525+(-1)*`(945+(-1)*525`)
.k #2*525+(-1)*945
.k #2*`(2415+(-2)*945`)+(-1)*945
.k #2*2415+(-5)*945

_:4
,s _% r .k -#5 _: & _% s .k #2 _:4
,notice t ;r & ;s >e n unique1 s9ce _% r
.k #41 _: & _% s .k -#16 _: wd al "w4
gggggggggggggggggggggggggggggggggggggggg

  ,to compute _% gcd (a, b) .k d _:1 we
>e us+ rep1t$ divi.ns to obta9 a decr1s+
sequ;e ( positive 9teg}s _% r1 .1 r2 .1
'''  .1 r;n .k d _:2 t is1





                                    #aah
_%

b      .k aq1+r1
a      .k r1q2+r2
r1     .k r2q3+r3
'''
r;n-2" .k r;n-1"q;n"+r;n"
r;n-1" .k r;n"q;n+1

_:4
,to f9d ;r & ;s s* t _% ar+bs .k d _:1
we 2g9 ) ? la/ equa;n & sub/itute
results obta9$ f ! previ|s equa;ns3
_%

d                                   .k
r;n"
.k r;n-2"-r;n-1"q;n"
.k r;n-2"-q;n"(r;n-3"-q;n-1"r;n-2")
.k -q;n"r;n-3"+(1+q;n"q;n-1")r;n-2"
'''
.k ra+sb

_:4
,! algori?m t we h j us$ to f9d !   #aai
grte/ common divisor ;d ( two 9teg}s a &
;b & to write ;d z ! l9e> comb9a;n ( a &
;b is "kn z ! ~1,euclid1n ~1algori?m4

      ,prime ,numb}s
  ,let ;p 2 an 9teg} s* t _% p .1 #1 _:4
,we say t ;p is a ~1prime ~1numb}1 or
simply ;p is ~1prime1 if ! only positive
numb}s t divide ;p >e #a & ;p xf4 ,an
9teg} _% n .1 #1 _: t is n prime is sd
to 2 ~1composite4













                                    #abj
7777777777777777777777777777777777777777
,lemma #b4ac ,euclid4
  ,let a & ;b 2 9teg}s & ;p 2 a prime
numb}4 ,if _% p|ab _:1 !n ei _% p|a _:
or _% p|b _:4

,pro(4 ,suppose t ;p does n divide a4
,we m/ %{ t _% p|b _:4 ,s9ce _% gcd (a,
p) .k #1 _:1 "! exi/ 9teg}s ;r & ;s s* t
_% ar+ps .k #1 _:4 ,s
_%

b .k b(ar+ps) .k (ab)r+p(bs)

_:4
,s9ce ;p divides bo? _% ab _: & xf1 ;p
m/ divide _% b .k (ab)r+p(bs) _:4
gggggggggggggggggggggggggggggggggggggggg






                                    #aba
7777777777777777777777777777777777777777
,!orem #b4ad ,euclid4
  ,"! exi/ an 9f9ite numb} ( primes4

,pro(4 ,we w prove ? !orem by 3tradic;n4
,suppose t "! >e only a f9ite numb} (
primes1 say _% p1, p2, ''', p;n _:4 ,let
_% ,p .k p1p2 ''' p;n"+1 _:4 ,!n ;,p m/
2 divisible by "s _% p;i _: = _% #1 "k:
i "k: n _:4 ,9 ? case1 _% p;i _: m/
divide _% ,p-p1p2 ''' p;n .k #1 _:1 : is
a 3tradic;n4 ,h;e1 ei ;,p is prime or "!
exi/s an addi;nal prime numb} _% p /.k
p;i _: t divides ;,p4
gggggggggggggggggggggggggggggggggggggggg


7777777777777777777777777777777777777777
,!orem #b4ae ,funda;tal ,!orem (
,>i?metic4
  ,let ;n 2 an 9teg} s* t _% n .1 #1 _:4
,!n


                                    #abb
_%

n .k p1p2 ''' p;k

_:1
": _% p1, ''', p;k _: >e  primes "<n
necess>ily 4t9ct">4 ,fur!rmore1 ?
factoriza;n is unique2 t is1 if
_%

n .k q1q2 ''' q;l

_:1
!n _% k .k l _: & ! _% q;i _:';s >e j !
_% p;i _:';s re>rang$4

,pro(4
  ,unique;s4 ,to %{ unique;s we w use
9duc;n on ;n4 ,! !orem is c}ta9ly true =
_% n .k #2 _: s9ce 9 ? case ;n is prime4
,n{ assume t ! result holds = all 9teg}s
;m s* t _% #1 "k: m "k n _:1 &


                                    #abc
_%

n .k p1p2 ''' p;k .k q1q2 ''' q;l

_:1
": _% p1 "k: p2 "k: '''  "k: p;k _: &
_% q1 "k: q2 "k: '''  "k: q;l _:4 ,by
,lemma #b4ac1 _% p1|q;i _: = "s _% i .k
#1, ''', l _: & _% q1|p;j _: = "s _% j
.k #1, ''', k _:4 ,s9ce all ( !
_% p;i _:';s & _% q;i _:';s >e prime1
_% p1 .k q;i _: &  _% q1 .k p;j _:4
,h;e1 _% p1 .k q1 _: s9ce _% p1 "k: p;j
.k q1 "k: q;i .k p1 _:4 ,by ! 9duc;n
hypo!sis1
_%

n' .k p2 ''' p;k .k q2 ''' q;l

_:
has a unique factoriza;n4 ,h;e1 _% k .k
l _: & _% q;i .k p;i _: = _% i .k #1,
''', k _:4
  ,exi/;e4 ,to %{ exi/;e1 suppose t "!
is "s 9teg} t _c 2 writt5 z !       #abd
product ( primes4 ,let ;,s 2 ! set ( all
s* numb}s4 ,by ! ,pr9ciple (
,well-,ord}+1 ;,s has a smalle/ numb}1
say a4 ,if ! only positive factors ( a
>e a & #a1 !n a is prime1 : is a
3tradic;n4 ,h;e1 _% a .k a1a2 _: ":
_% #1 "k a1 "k a _: & _% #1 "k a2 "k
a _:4 ,nei _% a1 `e ,s _: nor _% a2 `e
,s _:1 s9ce a is ! smalle/ ele;t 9 ;,s4
,s
_%

a1 .k p1 ''' p;r"
a2 .k q1 ''' q;s

_:4
,"!=e1
_%

a .k a1a2 .k p1 ''' p;r"q1 ''' q;s

_:4
,s _% a /`e ,s _:1 : is a 3tradic;n4
gggggggggggggggggggggggggggggggggggggggg
                                    #abe
      ,hi/orical ,note
  ,prime numb}s 7 f/ /udi$ by ! anci5t
,greeks4 ,two important results f
antiqu;y >e ,euclid's pro( t an 9f9ite
numb} ( primes exi/ & ! ,sieve (
,}atos!nes1 a me?od ( comput+ all ( !
prime numb}s less ?an a fix$ positive
9teg} ;n4 ,"o problem 9 numb} !ory is to
f9d a func;n ;f s* t _% f(n) _: is prime
= ea* 9teg} ;n4 ,pi}re ,f}mat
"<#afja8,-#affe"> 3jectur$ t
_% #2~2~~n~"+1 _: 0 prime = all ;n1 b
lat} x 0 %{n by ,leonh>d ,eul}
"<#agjg,-#aghc"> t
_%

#2~2~~5~"+1 .k #4,294,967,297

_:
is a composite numb}4 ,"o ( ! _m unprov5
3jectures ab prime numb}s is ,goldba*'s
,3jecture4 ,9 a lr to ,eul} 9 #agdb1
,*ri/ian ,goldba* /at$ ! 3jecture t e
ev5 9teg} ) ! excep;n ( #b seem$ to 2 !
sum ( two primes3 _% #4 .k          #abf
#2+2 _:1 _% #6 .k #3+3 _:1 _% #8 .k
#3+5 _:1 _% ''' _:4 ,al? ! 3jecture has
be5 v}ifi$ = ! numb}s up "?
_% #4`*10~18 _:1 x has yet to 2 prov5 9
g5}al4 ,s9ce prime numb}s play an
important role 9 public key
cryptography1 "! is curr5tly a grt d1l (
9t}e/ 9 det}m9+ :e!r or n a l>ge numb}
is prime4

    #b4c ,r1d+ ,"qs

#a4 ,use ,sage to express #abcdefgib z a
product ( prime numb}s4

#b4 ,f9d ! grte/ common divisor ( #hd &
#eb4

#c4 ,f9d 9teg}s ;r & ;s s t
_% r(84)+s(52) .k gcd (84, 52) _:4

#d4 ,expla9 ! use ( ! t}m 89duc;n
hypo!sis40

#e4 ,:at is ,goldba*'s ,3jecture8   #abg
,& :y is x call$ a 83jecture08

    #b4d ,ex}cises

#a4 ,prove t
_%

#1~2"+2~2+''' +n~2 .k ?n(n+1)(2n+1)/6#

_:
= _% n `e `;,n _:4

,h9t4 ,! base case1
_% ,s(1)_3`(1(1+1)(2(1)+1)`)_/6 .k #1 .k
#1~2 _: is true4 ,assume t
_% ,s(k)_3#1~2"+2~2+''' +k~2" .k
`(k(k+1)(2k+1)`)_/6 _: is true4 ,!n
_%

#1~2"+2~2+''' +k~2"+(k+1)~2"       .k
`(k(k+1)(2k+1)`)_/6+(k+1)~2"
.k `((k+1)((k+1)+1)(2(k+1)+1)`)_/6

_:1
& s _% ,s(k+1) _: is true4 ,?us1    #abh
_% ,s(n) _: is true = all positive
9teg}s ;n4

#b4 ,prove t
_%

#1~3"+2~3+''' +n~3 .k ?n~2"(n+1)~2"/4#

_:
= _% n `e `;,n _:4

#c4 ,prove t _% n&  .1 #2~n _: = _% n
.1: #4 _:4

,h9t4 ,! base case1 _% ,s(4)_34&  .k #24
.1 #16 .k #2~4 _: is true4 ,assume
_% ,s(k)_3k&  .1 #2~k _: is true4 ,!n _%
(k+1)&  .k k& (k+1) .1 #2~k"*2 .k #2~k+1
_:1 s _% ,s(k+1) _: is true4 ,?us1
_% ,s(n) _: is true = all positive
9teg}s ;n4

#d4 ,prove t

                                    #abi
_%

x+4x+7x+''' +(3n-2)x .k ?n(3n-1)x/2#

_:
= _% n `e `;,n _:4

#e4 ,prove t _% #10~n+1"+10~n"+1 _: is
divisible by #c = _% n `e `;,n _:4

#f4 ,prove t
_% #4*10~2n"+9*10~2n-1"+5 _: is
divisible by #ii = _% n `e `;,n _:4

#g4 ,%{ t
_%

<n>a1a2 ''' a;n"} "k: ?1/n#".,s%k .k
#1<n}a;k

_:4

#h4 ,prove ! ,leibniz rule =
_% f~(n)"(x) _:1 ": _% f~(n) _: is ! n?
d}ivative ( ;f2 t is1 %{ t          #acj
_%

(fg)~(n)"(x) .k ".,s%k .k
#0<n}(n%k)f~(k)"(x)g~(n-k)"(x)

_:4

,h9t4 ,foll{ ! pro( 9 ,example #b4d4

#i4 ,use 9duc;n to prove t
_% #1+2+2~2+''' +2~n .k #2~n+1"-1 _: =
_% n `e `;,n _:4

#aj4 ,prove t
_%

?1/2#+?1/6#+''' +?1/n(n+1)# .k ?n/n+1#

_:
= _% n `e `;,n _:4

#aa4 ,if ;x is a nonnegative r1l numb}1
!n %{ t _% (1+x)~n"-1 .1: nx _: = _% n
.k #0, #1, #2, ''' _:4
                                    #aca
,h9t4 ,! base case1 _% ,s(0)_3(1+x)~0"-1
.k #0 .1: #0 .k #0*x _: is true4 ,assume
_% ,s(k)_3(1+x)~k"-1 .1: kx _: is true4
,!n
_%

(1+x)~k+1"-1            .k
(1+x)(1+x)~k"-1
.k (1+x)~k"+x(1+x)~k"-1
.1: kx+x(1+x)~k"
.1: kx+x
.k (k+1)x

_:1
s _% ,s(k+1) _: is true4 ,"!=e1
_% ,s(n) _: is true = all positive
9teg}s ;n4

#ab4 "<,p{} ,sets4"> ,let ;,x 2 a set4
,def9e ! ~1p{} ~1set ( ;,x1 d5ot$
_% `;,p(,x) _:1 to 2 ! set ( all subsets
 ( ;,x4  ,= example1


                                    #acb
_%

`;,p(.(a, b.)) .k .(_0, .(a.), .(b.),
.(a, b.).)

_:4
,= e positive 9teg} ;n1 %{ t a set )
exactly ;n ele;ts has a p{} set )
exactly _% #2~n _: ele;ts4

#ac4 ,prove t ! two pr9ciples (
ma!matical 9duc;n /at$ 9 ,sec;n #b4a >e
equival5t4

#ad4 ,%{ t ! ,pr9ciple ( ,well-,ord}+ =
! natural numb}s implies t #a is !
smalle/ natural numb}4 ,use ? result to
%{ t ! ,pr9ciple ( ,well-,ord}+ implies
! ,pr9ciple ( ,ma!matical ,9duc;n2 t is1
%{ t if _% ,s _"k `;,n _: s* t _% #1 `e
,s _: & _% n+1 `e ,s _: :5"e _% n `e
,s _:1 !n _% ,s .k `;,n _:4

#ae4 ,= ea* ( ! foll{+ pairs ( numb}s a
& ;b1 calculate _% gcd (a, b) _:    #acc
& f9d 9teg}s ;r & ;s s* t _% gcd (a, b)
.k ra+sb _:4
a4 #ad & #ci
;b4 #bcd & #afe
;c4 #agci & #iibc
;d4 #dga & #efb
;e4 #bcgga & #aiide
;f4 _% -#4357 _: & #cged

#af4 ,let a & ;b 2 nonz}o 9teg}s4 ,if "!
exi/ 9teg}s ;r & ;s s* t _% ar+bs .k
#1 _:1 %{ t a & ;b >e relatively prime4

#ag4 "<,fibona3i ,numb}s4"> ,! ,fibona3i
numb}s >e
_%

#1, #1, #2, #3, #5, #8, #13, #21, '''

_:4
,we c def9e !m 9ductively by _% f1 .k
#1 _:1 _% f2 .k #1 _:1 & _% f;n+2 .k
f;n+1"+f;n _: = _% n `e `;,n _:4
a4 ,prove t _% f;n "k #2~n _:4
;b4 ,prove t _% f;n+1"f;n-1 .k      #acd
f;n~2"+(-1)~n _:1 _% n .1: #2 _:4
;c4 ,prove t _% f;n .k
`((1+>5})~n"-(1->5})~n"`)_/2~n">5} _:4
;d4 ,%{ t _% .f .k "lim%n $o ,=}
f;n+1"_/f;n .k (>5}+1)_/2 _:4  ,! 3/ant
_% .f _: is "kn z ! ~1gold5 ~1ratio4
;e4 ,prove t _% f;n _: & _% f;n+1 _: >e
relatively prime4

,h9t4 ,= "<a"> & "<;b"> use ma!matical
9duc;n4 "<;c"> ,%{ t _% f1 .k #1 _:1
_% f2 .k #1 _:1 & _% f;n+2 .k
f;n+1"+f;n _:4 "<;e"> ,use "p "<;b"> &
,ex}cise #b4d4af4

#ah4 ,let a & ;b 2 9teg}s s* t _% gcd
(a, b) .k #1 _:4 ,let ;r & ;s 2 9teg}s
s* t _% ar+bs .k #1 _:4 ,prove t
_%

gcd (a, s) .k gcd (r, b) .k gcd (r, s)
.k #1

_:4
                                    #ace
#ai4 ,let _% x, y `e `;,n _: 2
relatively prime4 ,if _% xy _: is a
p}fect squ>e1 prove t ;x & ;y m/ bo? 2
p}fect squ>es4

,h9t4 ,use ! ,funda;tal ,!orem (
,>i?metic4

#bj4 ,us+ ! divi.n algori?m1 %{ t e
p}fect squ>e is ( ! =m _% #4k _: or
_% #4k+1 _: = "s nonnegative 9teg} ;k4

#ba4 ,suppose t _% a, b, r, s _: >e
pairwise relatively prime & t
_%

a~2"+b~2" .k r~2"
a~2"-b~2" .k s~2

_:4
,prove t a1 ;r1 & ;s >e odd & ;b is ev54

#bb4 ,let _% n `e `;,n _:4 ,use ! divi.n
algori?m to prove t e 9teg} is 3gru5t
mod ;n to precisely "o ( ! 9teg}s   #acf
_% #0, #1, ''', n-1 _:4 ,3clude t if ;r
is an 9teg}1 !n "! is exactly "o ;s 9
_% `;,z _: s* t _% #0 "k: s "k n _: &
_% `(r`) .k `(s`) _:4 ,h;e1 ! 9teg}s >e
9de$ "pi;n$ by 3gru;e mod ;n4

#bc4 ,def9e ! ~7l1/ common multiple~' (
two nonz}o 9teg}s a & ;b1 d5ot$ by
_% lcm (a, b) _:1 to 2 ! nonnegative
9teg} ;m s* t bo? a & ;b divide ;m1 & if
a & ;b divide any o!r 9teg} ;n1 !n ;m al
divides ;n4  ,prove "! exi/s a unique
l1/ common multiple = any two 9teg}s a &
;b4

,h9t4 ,use ! ,pr9ciple ( ,well-,ord}+ &
! divi.n algori?m4

#bd4 ,if _% d .k gcd (a, b) _: & _% m .k
lcm (a, b) _:1 prove t _% dm .k |ab| _:4

#be4 ,%{ t _% lcm (a, b) .k ab _: if &
only if _% gcd (a, b) .k #1 _:4

#bf4 ,prove t _% gcd (a, c) .k      #acg
gcd (b, c) .k #1 _: if & only if _% gcd
(ab, c) .k #1 _: = 9teg}s a1 ;b1 & ;c4

#bg4 ,let _% a, b, c `e `;,z _:4 ,prove
t if _% gcd (a, b) .k #1 _: &
_% a|bc _:1 !n _% a|c _:4

,h9t4 ,s9ce _% gcd (a, b) .k #1 _:1 "!
exi/ 9teg}s ;r & ;s s* t _% ar+bs .k
#1 _:4 ,?us1 _% acr+bcs .k c _:4

#bh4 ,let _% p .1: #2 _:4 ,prove t if
_% #2~p"-1 _: is prime1 !n ;p m/ al 2
prime4

#bi4 ,prove t "! >e an 9f9ite numb} (
primes ( ! =m _% #6n+5 _:4

,h9t4 ,e prime m/ 2 ( ! =m #b1 #c1
_% #6n+1 _:1 or _% #6n+5 _:4 ,suppose "!
>e only f9itely _m primes ( ! =m
_% #6k+5 _:4

#cj4 ,prove t "! >e an 9f9ite numb} (
primes ( ! =m _% #4n-1 _:4          #ach
#ca4 ,us+ ! fact t #b is prime1 %{ t "!
d n exi/ 9teg}s ;p & ;q s* t _% p~2 .k
#2q~2 _:4 ,demon/rate t "!=e _% >2} _:
_c 2 a ra;nal numb}4

    #b4e ,programm+ ,ex}cises

#a4 "<,! ,sieve ( ,}atos!nes4"> ,"o
me?od ( comput+ all ( ! prime numb}s
less ?an a c}ta9 fix$ positive 9teg} ;,n
is to li/ all ( ! numb}s ;n s* t _% #1
"k n "k ,n _:4 ,2g9 by elim9at+ all ( !
multiples ( #b4 ,next elim9ate all ( !
multiples ( #c4 ,n{ elim9ate all ( !
multiples ( #e4 ,notice t #d has alr be5
cross$ |4 ,3t9ue 9 ? mann}1 notic+ t we
d n h to g all ! way to ;,n2 x su6ices
to /op at _% >,n} _:4 ,us+ ? me?od1
compute all ( ! prime numb}s less ?an
_% ,n .k #250 _:4 ,we c al use ? me?od
to f9d all ( ! 9teg}s t >e relatively
prime to an 9teg} ;,n4 ,simply elim9ate
! prime factors ( ;,n & all ( _!
multiples4 ,us+ ? me?od1 f9d all ( !
numb}s t >e relatively prime to     #aci
_% ,n .k #120 _:4 ,us+ ! ,sieve (
,}atos!nes1 write a program t w compute
all ( ! primes less ?an an 9teg} ;,n4

#b4 ,let _% `;,n~0 .k `;,n.+.(0.) _:4
,ack}mann's func;n is ! func;n _% ,a"1
`;,n~0"`*`;,n~0" $o `;,n~0 _: def9$ by !
equa;ns
_%

,a(0, y)     .k y+1,
,a(x+1, 0)   .k ,a(x, 1),
,a(x+1, y+1) .k ,a(x, ,a(x+1, y))

_:4
,use ? def9i;n to compute _% ,a(3,
1) _:4 ,write a program to evaluate
,ack}mann's func;n4 ,modify !  program
to c.t ! numb} ( /ate;ts execut$ 9 !
program :5 ,ack}mann's func;n is
evaluat$4 ,h{ _m /ate;ts >e execut$ 9 !
evalua;n ( _% ,a(4, 1) _:;8 ,:at ab
_% ,a(5, 1) _:;8

#c4 ,write a comput} program t w    #adj
imple;t ! ,euclid1n algori?m4 ,! program
%d a3ept two positive 9teg}s a & ;b z
9put & %d |tput _% gcd (a, b) _: z well
z 9teg}s ;r & ;s s* t
_%

gcd (a, b) .k ra+sb

_:4

    #b4f ,ref};es & ,su7e/$ ,r1d+s
.<#a.>  ,brook%e>1 ;,j4 ;,g4 .7,!ory (
  ,computa;n3 ,=mal ,languages1
  ,automata1 & ,complex;y.'4
  ,b5jam9_/,cumm+s1 ,r$wood ,c;y1 ,,ca1
  #aihi4 ,%{s ! rela;n%ips ( ! !oretical
  aspects ( comput} sci;e to set !ory &
  ! 9teg}s4
.<#b.>  ,h>dy1 ;,g4 ;,h4 & ,w"r1 ;,e4
  ;,m4 .7,an ,9troduc;n to ! ,!ory (
  ,numb}s.'4  #fth $4 ,ox=d ,univ}s;y
  ,press1 ,new ,york1 #bjjh4
.<#c.>  ,niv51 ,i4 & ,zuck}man1 ;,h4
  ;,s4 .7,an ,9troduc;n to ! ,!ory (
  ,numb}s.'4  #eth $4 ,wiley1       #ada
  ,new ,york1 #aiia4
.<#d.>  ,v&5 ,eynd51 ;,c4 .7,ele;t>y
  ,numb} ,!ory.'4 #bnd $4  ,wavel&
  ,press1 ,l;g ,grove ,,il1 #bjja4

    #b4g ,sage
  ,_m prop}ties ( ! algebraic objects we
w /udy c 2 det}m9$ f prop}ties (
associat$ 9teg}s4 ,& ,sage has _m p{};l
func;ns = analyz+ 9teg}s4

      ,divi.n ,algori?m
  ,! code `#7a .0 ;b`#' w return !
rema9d} ~u divi.n ( a by ;b4 ,9 o!r ~ws1
! result is ! unique 9teg} ;r s* t
"<#a"> _% #0 "k: r "k b _:1 & "<#b">
_% a .k bq+r _: = "s 9teg} ;q "<!
quoti5t">1 z gu>ante$ by ! ,divi.n
,algori?m "<,!orem #b4i">4 ,!n
_% (a-r)_/b _: w equal ;q4 ,= example1




                                    #adb
`#7;r "7 #ad .0 #c`#'
`#2;r
-----------------
`#2#b


`#7;q "7 "<#ad - r">_/#c`#'
`#2;q
-----------------
`#2#d

  ,x is al possible to get bo? ! quoti5t
& rema9d} at ! same "t ) !
`#1;4quo.-rem"<"> me?od "<quoti5t &
rema9d}">4

`#7a "7 #ad`#'
`#7;b "7 #c`#'
`#1a4quo.-rem"<b">
-----------------
`#1"<#d1 `#1#b">

  ,a rema9d} ( z}o 9dicates divisibil;y4
,s `#7"<a .0 ;b"> "7"7 #j`#' w return
`#1,true if ;b divides a1 & w       #adc
o!rwise return `#1,false4

`#7"<#bj .0 #e"> "7"7 #j`#'
-----------------
`#1,true


`#7"<#ag .0 #d"> "7"7 #j`#'
-----------------
`#1,false

  ,! `#1;4divides"<"> me?od is ano!r
op;n4

`#7;c "7 #e`#'
`#1c4divides"<#bj">
-----------------
`#1,true


`#7;d "7 #d`#'
`#1d4divides"<#ag">
-----------------
`#1,false
                                    #add
      ,grte/ ,common ,divisor
  ,! grte/ common divisor ( a & ;b is
obta9$ ) ! comm& `#1gcd"<a1 `#1;b">1 ":
9 |r f/ uses1 a & ;b >e 9teg}s4 ,lat}1 a
& ;b c 2 o!r objects ) a no;n (
divisibil;y & 8grt;s10 s* z polynomials4
,= example1

`#1gcd"<#bggf1 `#1#bdeb">
-----------------
`#2#d

  ,we c use ! `#1gcd comm& to det}m9e if
a pair ( 9teg}s >e relatively prime4

`#7a "7 #cajdi`#'
`#7;b "7 #baje`#'
`#7gcd"<a1 ;b"> "7"7 #a`#'
-----------------
`#1,true




                                    #ade
`#7a "7 #cefc`#'
`#7;b "7 #bidg`#'
`#7gcd"<a1 ;b"> "7"7 #a`#'
-----------------
`#1,false

  ,! comm& `#1xgcd"<a;1b">"<8e,xt5d$
,,gcd0"> returns a triple ": ! f/ ele;t
is ! grte/ common divisor ( a & ;b "<z )
! `#1gcd"<a;1b"> comm& abv">1 b ! next
two ele;ts >e values ( ;r & ;s s* t
_% ra+sb .k gcd (a, b) _:4

`#1xgcd"<#fcc1cca">
-----------------
`#7"<#a1 -#acg1 #bfb">`#'

  ,por;ns ( ! triple c 2 extract$ us+
`#2.< `#2.>"<89dex+0"> to a3ess ! 5tries
( ! triple1 />t+ ) ! f/ z numb} `#2#j4
,= example1 ! foll{+ %d alw return !
result `#1,true1 ev5 if y *ange ! values
( `#2a & `#2;b4 ,try *ang+ ! values (
`#2a & `#2;b 2l1 to see t ! result is
alw `#1,true4                       #adf
`#7a "7 #fcc`#'
`#7;b "7 #cca`#'
`#7ext5d$ "7 xgcd"<a1 ;b">`#'
`#7;g "7 ext5d$.<#j.>`#'
`#7;r "7 ext5d$.<#a.>`#'
`#7;s "7 ext5d$.<#b.>`#'
`#7;g "7"7 r"9a "6 s"9b`#'
-----------------
`#1,true

  ,/udy+ ? block ( code w g a l;g way
t{>ds help+ y get ! mo/ | ( ,sage's
|tput4 ,note t `#2"7 is h{ a value is
.1assign$ to a v>iable1 :ile z 9 ! la/
l9e1 `#1"7"7 is h{ we comp>e two items =
.1equal;y4

      ,primes & ,factor+
  ,! me?od `#1;4is.-prime"<"> w det}m9e
if an 9teg} is prime or n4




                                    #adg
`#7a "7 #aagcga`#'
`#1a4is.-prime"<">
-----------------
`#1,true


`#7;b "7 #adedgjgc`#'
`#1b4is.-prime"<">
-----------------
`#1,false


`#7;b "7"7 #aeig "9 #iaji`#'
-----------------
`#1,true

  ,! comm& `#1r&om.-prime"<a1
`#1pro("7,true"> w g5}ate a r&om prime
numb} 2t #b & a4 ,exp}i;t by execut+ !
foll{+ two compute cells s"eal "ts4
"<,replac+ `#1pro("7,true by
`#1pro("7,false w spe$ up ! se>*1 b "! w
2 a v1 v1 v small probabil;y ! result w
n 2 prime4">
                                    #adh
`#7a "7 r&om.-prime"<#aj`5#ba1
pro("7,true">`#'
`#2a
-----------------
`#1#dbdgbiajagicedbaieaic


`#1a4is.-prime"<">
-----------------
`#1,true

  ,! comm& `#1prime.-range"<a1 `#1;b">
returns an ord}$ li/ ( all ! primes f a
to _% b-1 _:1 9clusive4 ,= example1

`#1prime.-range"<#ejj1 `#1#eej">
-----------------
`#7.<#ejc1 #eji1 #eba1 #ebc1 #eda1
#edg.>`#'

  ,! comm&s `#1next.-prime"<a"> &
`#1previ|s.-prime"<a"> >e o!r ways to
get a s+le prime numb} ( a desir$ size4
,give !m a try 2l if y h an empty
compute cell "! "<z y w if y >e     #adi
r1d+ 9 ! ,sage ,notebook1 or >e r1d+ !
onl9e v}.n">4 "<,! ha% symbol1 `#2_?1 is
us$ to 9dicate a 8com;t0 l9e1 : w n 2
evaluat$ by ,sage4 ,s }ase ? l9e1 or />t
on ! "o 2l x4">

`#7_? ,practice >ea "<n l9k$ = ,sage
,cell use">`#'

  ,9 addi;n to *eck+ if 9teg}s >e prime
or n1 or g5}at+ prime numb}s1 ,sage c al
decompose any 9teg} 9to xs prime
factors1 z describ$ by ! ,funda;tal
,!orem ( ,>i?metic "<,!orem #b4ae">4

`#7a "7 #bfjj`#'
`#1a4factor"<">
-----------------
`#7#b`5#c "9 #e`5#b "9 #ac`#'

  ,s _% #2600 .k #2~3"`*5~2"`*13 _: & ?
is ! unique way to write #bfjj z a
product ( prime numb}s "<o!r ?an
re>rang+ ! ord} ( ! primes !mvs 9 !
product">4                          #aej
  ,:ile ,sage w pr9t a factoriza;n
nicely1 x is c>ri$ 9t}nally z a li/ (
pairs ( 9teg}s1 ) ea* pair 2+ a base "<a
prime numb}"> & an expon5t "<a positive
9teg}">4 ,/udy ! foll{+ c>e;lly1 z x is
ano!r gd ex}cise 9 "w+ ) ,sage |tput 9 !
=m ( li/s4

`#7a "7 #bfjj`#'
`#7factor$ "7 a4factor"<">`#'
`#7fir/.-t}m "7 factor$.<#j.>`#'
`#1fir/.-t}m
-----------------
`#1"<#b1 `#1#c">


`#7second.-t}m "7 factor$.<#a.>`#'
`#1second.-t}m
-----------------
`#1"<#e1 `#1#b">




                                    #aea
`#7?ird.-t}m "7 factor$.<#b.>`#'
`#1?ird.-t}m
-----------------
`#1"<#ac1 `#1#a">


`#7fir/.-prime "7 fir/.-t}m.<#j.>`#'
`#1fir/.-prime
-----------------
`#2#b


`#7fir/.-expon5t "7 fir/.-t}m.<#a.>`#'
`#1fir/.-expon5t
-----------------
`#2#c

  ,! next compute cell rev1ls ! 9t}nal
v}.n ( ! factoriza;n by ask+ = ! actual
li/4 ,& we %{ h{ y cd det}m9e exactly h{
_m t}ms ! factoriza;n has by us+ ! l5g?
comm&1 `#1l5"<">4


                                    #aeb
`#1li/"<factor$">
-----------------
`#7.<"<#b1 #c">1 "<#e1 #b">1 "<#ac1
#a">.>`#'


`#1l5"<factor$">
-----------------
`#2#c

  ,c y extract ! next two primes1 & _!
expon5ts1 f `#2a;8

`#7_? ,practice >ea "<n l9k$ = ,sage
,cell use">`#'


    #b4h ,sage ,ex}cises
  ,~! ex}cises >e ab 9ve/igat+ basic
prop}ties ( ! 9teg}s1 "s?+ we w
frequ5tly d :5 9ve/igat+ gr|ps4 ,sage
"w%eets h ext5sive capabilities = mak+
new cells ) c>e;lly =matt$ text1 9clude
support = ,la,te,x syntax to express
ma!matics4 ,s :5 a "q asks =        #aec
explana;n or com;t>y1 make a new cell &
communicate cle>ly ) yr audi;e4

#a4 ,use ! `#1next.-prime"<"> comm& to
3/ruct two di6}5t #h-digit prime numb}s
& save !m 9 v>iables "nd `#2a & `#2;b4

#b4 ,use ! `#1;4is.-prime"<"> me?od to
v}ify t yr primes `#2a & `#2;b >e r1lly
prime4

#c4 ,v}ify t #a is ! grte/ common
divisor ( yr two primes f ! previ|s
ex}cises4

#d4 ,f9d two 9teg}s t make a 8l9e>
comb9a;n0 ( yr two primes equal to #a4
,9clude a v}ifica;n ( yr result4

#e4 ,det}m9e a factoriza;n 9to p{}s (
primes = _% c .k #4 598 037 234 _:4

#f4 ,write a compute cell t def9es !
same value ( `#2;c ag1 & !n def9es a
c&idate divisor ( `#2;c "nd `#2;d   #aed
4 ,! ?ird l9e ( ! cell %d return
`#1,true if & only if `#2;d is a divisor
( `#2;c4 ,illu/rate ! use ( yr cell by
te/+ yr code ) _% d .k #7 _: & 9 a new
copy ( ! cell1 te/+ yr code ) _% d .k
#11 _:4


















                                    #aee
